{"version":3,"sources":["components/loader/loader.module.scss","components/checkbox/checkbox.module.scss","containers/comments/comments.module.scss","containers/modals/change-pass-modal/change-pass.module.scss","components/button/button.module.scss","components/header-menu/header-menu.module.scss","containers/feed/feed.module.scss","components/pagination/pagination.module.scss","containers/stock/feed/feed.module.scss","containers/news/post/post.module.scss","containers/events/post/post.module.scss","components/modal/modal.module.scss","containers/modals/comment-modal/comment-modal.module.scss","containers/layout/layout.module.scss","components/add-btn/add-btn.module.scss","components/tag/tag.module.scss","containers/stock/stock.module.scss","containers/stock/post/post.module.scss","containers/me/me.module.scss","containers/static/static.module.scss","components/auth-forms/auth-form.module.scss","containers/stock/feed/item/item.module.scss","containers/feed/item/item.module.scss","assets/img/logo.png","components/logo/index.js","containers/auth/index.js","components/loader/index.js","components/button/index.js","components/input/index.js","helpers/validation-schemas.js","constants/api.constants.js","services/auth.js","constants/error.constants.js","constants/routes.constants.js","components/auth-forms/login-form.js","pages/login.js","components/auth-forms/register-form.js","pages/register.js","components/auth-forms/reset-form.js","pages/reset.js","components/user-preview/index.js","components/header-menu/index.js","containers/layout/header/index.js","services/axios.js","services/user.js","constants/actions.constants.js","actions/user-actions.js","containers/layout/index.js","containers/feed/item/index.js","components/pagination/index.js","containers/feed/index.js","services/events.js","actions/events-actions.js","constants/modal.constants.js","constants/user.constants.js","actions/modals-actions.js","components/add-btn/index.js","containers/events/index.js","pages/events.js","services/stock.js","actions/stock-actions.js","components/checkbox/index.js","containers/stock/filter/index.js","components/tag/index.js","containers/stock/feed/item/index.js","containers/stock/feed/index.js","containers/stock/index.js","pages/stock.js","services/news.js","actions/news-actions.js","containers/news/index.js","pages/news.js","containers/comments/item/index.js","containers/comments/index.js","containers/news/post/index.js","pages/news-post.js","containers/events/post/index.js","pages/events-post.js","containers/stock/post/index.js","pages/stock-post.js","containers/profile/index.js","pages/profile.js","containers/me/index.js","pages/me.js","containers/static/index.js","pages/static/policy.js","pages/static/rules.js","pages/static/terms.js","assets/img/ios.svg","assets/img/android.svg","pages/static/apps.js","routes.js","components/modal/index.js","containers/modals/comment-modal/index.js","helpers/form-helpers.js","components/textarea/index.js","containers/modals/post-modal/index.js","containers/modals/product-modal/index.js","containers/modals/change-pass-modal/index.js","containers/modals/index.js","app.js","helpers/device-helpers.js","reducers/user-reducer.js","reducers/news-reducer.js","reducers/events-reducer.js","reducers/modals-reducer.js","reducers/stock-reducer.js","reducers/index.js","store.js","index.js","containers/profile/profile.module.scss","containers/modals/post-modal/post-modal.module.scss","containers/modals/product-modal/product-modal.module.scss","components/input/input.module.scss","containers/layout/header/header.module.scss","components/user-preview/user-preview.module.scss","components/textarea/textarea.module.scss","containers/comments/item/item.module.scss","pages/static/static.module.scss","containers/auth/auth.module.scss","containers/stock/filter/filter.module.scss","components/logo/logo.module.scss"],"names":["module","exports","Logo","className","cn","s","container","src","logo","alt","name","AuthContainer","children","wrap","form","copyright","Loader","size","preloader","loader","Button","text","icon","isLoading","type","disabled","styleType","onClick","button","Input","label","wrapperClassname","error","onChange","value","props","useState","isFocused","setIsFocused","active","onFocus","onBlur","input","e","target","loginSchema","yup","shape","email","required","password","min","max","resetTokenSchema","newPassword","resetSchema","changeSchema","oldPassword","registerSchema","displayName","confirmPassword","oneOf","phone","postSchema","description","eventLatitude","eventLongitude","productSchema","price","postalDeliveryAvailable","birthday","country","city","team","API_URL","process","authUser","data","axios","post","createUser","askPasswordReset","resetPasswordConfirm","ERRORS","LOGIN_PATH","REGISTER_PATH","RESTORE_PATH","RESTORE_TOKEN_PATH","EVENTS_PATH","STOCK_PATH","NEWS_PATH","POLICY_PATH","TERMS_PATH","RULES_PATH","APPS_PATH","UNAUTHORIZED_PAGES_PATH","LoginForm","history","useHistory","setIsLoading","useForm","reValidateMode","resolver","yupResolver","handleSubmit","errors","formState","setValue","control","onSubmit","a","response","localStorage","setItem","accessToken","push","toast","message","render","field","placeholder","forget","link","to","btn","Login","RegisterForm","success","mask","inputProps","Register","ResetForm","token","useParams","resetPasswordToken","setTimeout","Reset","UserPreview","avatar","date","localClassName","img","noAvatar","moment","format","HeaderMenu","profilePictureUrl","menuRef","useRef","isMenuOpen","setIsMenuOpen","handleClickOutside","current","contains","useEffect","document","addEventListener","removeEventListener","ref","menu","removeItem","Header","useSelector","state","user","me","header","activeClassName","configureInterceptors","interceptors","request","use","config","headers","Authorization","originalRequest","status","_retry","Promise","reject","get","getUser","id","sendAvatar","file","sendUserData","put","SET_EVENTS","SET_EVENTS_POST","SET_EVENTS_POST_COMMENTS","CLEAR_EVENTS_POST","SET_EVENT_COMMENT","LIKE_EVENT","LIKE_EVENTS_POST","CLEAR_EVENTS","ADD_EVENTS_POST","SET_NEWS","SET_NEWS_POST","SET_NEWS_POST_COMMENTS","CLEAR_NEWS_POST","LIKE_NEWS","SET_NEWS_COMMENT","LIKE_NEWS_POST","CLEAR_NEWS","ADD_NEWS_POST","CHANGE_MODALS_STATE","SET_CATEGORIES","SET_FILTERS","SET_PRODUCTS","SET_POST","ADD_NEW_PRODUCT","SET_ME","SET_USER","SET_AVATAR","REMOVE_AVATAR","setMe","dispatch","userData","payload","updateMe","setUser","updateAvatar","Layout","useDispatch","locale","getItem","FeedItem","info","shortDescription","imageUrls","authorId","authorName","authorAvatarUrl","createdAt","likesCount","commentsCount","videoUrl","liked","eventDate","startTime","onLike","isPost","pathname","useLocation","backURL","split","isSliderShow","setIsSliderShow","item","headerBtn","title","linkToCopy","window","location","origin","navigator","clipboard","writeText","copyLink","media","length","toggler","sources","videoId","video","slice","map","width","height","defaultState","center","zoom","geometry","footer","comments","commentIcon","likes","likeIcon","Pagination","totalPages","onChangePage","pageCount","pageRangeDisplayed","marginPagesDisplayed","onPageChange","page","selected","containerClassName","pagination","paginationActive","previousLabel","nextLabel","Feed","list","feed","getEvents","getEventsPostComments","getEventPost","addNewEvent","likeEventsComment","addEventsPostComment","likeEvent","setEvents","events","setEventsPost","setEventsPostComments","toggleLikeEventsComment","getState","commentsList","content","newCommentsState","toggleLikeEvent","eventsList","newEventsState","toggleLikePostEvent","eventPost","COMMENT_MODAL","POST_MODAL","PRODUCT_MODAL","CHANGE_PASS_MODAL","ROLES","openModal","modal","params","show","AddButton","EventsContainer","roles","currentPage","addPermission","includes","eventLikeHandler","isEvent","addPost","newEvent","addNewEvents","Events","getProducts","filter","categories","join","sortDir","sortField","getProduct","setFilters","filters","setProducts","filterArr","stock","products","Checkbox","checked","htmlFor","checkmark","Filter","checkedCategories","setCheckedCategories","allCategories","checkbox","newValues","onCheckHandler","Tag","tag","category","region","promoUrl","reserved","authorPhone","views","isPhoneShow","setIsPhoneShow","promo","href","showPhone","rel","row","StockFeed","StockContainer","layout","addProduct","Stock","getNews","getNewsPostComments","getNewsPost","addNewsPost","likeNews","likeNewsComment","addNewsPostComment","setNews","news","setNewsPost","setNewsPostComments","toggleLikeNews","newsList","newNewsState","toggleLikeNewsComment","toggleLikePostNews","newsPost","NewsContainer","NewsLikeHandler","newPost","addNewPost","News","CommentsItem","userId","userName","userAvatarUrl","Comments","addComment","add","PostContainer","all","NewsPostLikeHandler","CommentLikeHandler","comment","setNewsPostComment","NewsPost","EventsPostLikeHandler","setEventsPostComment","EventsPost","product","setStockPost","StockPost","ProfileContainer","profile","subtitle","Profile","registerLocale","ru","MeContainer","isEdit","setIsEdit","defaultValues","reset","avatarChange","val","formData","FormData","append","rmAvatar","delete","remove","preview","files","accept","note","Date","datepicker","wrapperClassName","datecontainer","dateFormat","placeholderText","showYearDropdown","dropdownMode","textarea","change","changePass","patch","Me","StaticContainer","Policy","Rules","Terms","Apps","AS","PM","Routes","path","exact","component","Modal","onClose","modalRef","CommentModal","closeModal","register","fileToDataUri","image","res","reader","FileReader","result","replace","readAsDataURL","uploadImage","setCallback","newImagesPromises","i","newImages","filterPassedTime","time","currentDate","selectedDate","getTime","Textarea","PostModal","images","setImages","setEventDate","onPost","lan","lon","address","contentType","eventAddress","road","house_number","minDate","showTimeSelect","filterTime","timeIntervals","dateInput","multiple","ProductModal","getValues","values","select","check","ChangePassModal","old","Modals","modals","commentModal","postModal","productModal","changePassModal","App","some","toMatchItem","userAgent","match","matchPath","strict","initialState","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.511ac18f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"loader_loader__2VQSH\",\"wrap\":\"loader_wrap__8WuLs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"checkbox_container__1l2Jv\",\"checkmark\":\"checkbox_checkmark__1ewpE\",\"label\":\"checkbox_label__32mmr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"comments_header__3cwal\",\"add\":\"comments_add__1OMJy\",\"container\":\"comments_container__32IW5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"change-pass_input__1JlEL\",\"btn\":\"change-pass_btn__TNEun\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__2qfeB\",\"red\":\"button_red__1qVpz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"header-menu_container__1vC4T\",\"menu\":\"header-menu_menu__FBkGq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feed\":\"feed_feed__MfOng\",\"item\":\"feed_item__2XJMd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"pagination_pagination__iJea2\",\"paginationActive\":\"pagination_paginationActive__ypK7w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feed\":\"feed_feed__1fd2F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"post_wrap__2V866\",\"post\":\"post_post__2QpLe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"post_wrap__3lnEA\",\"post\":\"post_post__3J4Wk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"modal_container__1Vx9k\",\"modal\":\"modal_modal__3_Six\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"comment-modal_textarea__O3mqT\",\"error\":\"comment-modal_error__1sMOW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"layout_container__3plDy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"add-btn_btn__lPpYh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tag\":\"tag_tag__3U6Jq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"stock_layout__258ug\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"post_item__1T1KP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"me_container__1sexU\",\"avatar\":\"me_avatar__QRyhz\",\"preview\":\"me_preview__vPFqQ\",\"file\":\"me_file__1lIB1\",\"img\":\"me_img__3G0F-\",\"add\":\"me_add__13q1R\",\"remove\":\"me_remove__2UOCs\",\"input\":\"me_input__3E0tu\",\"datecontainer\":\"me_datecontainer__3-vpS\",\"note\":\"me_note__wx3mb\",\"datepicker\":\"me_datepicker__2nqha\",\"textarea\":\"me_textarea__2Ubnq\",\"change\":\"me_change__3_YZO\",\"item\":\"me_item__3MR1N\",\"subtitle\":\"me_subtitle__1Qkcc\",\"name\":\"me_name__3Bq0x\",\"description\":\"me_description__5tYaS\",\"text\":\"me_text__2_h4B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"static_container__2u8jT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"auth-form_input__2P1pQ\",\"link\":\"auth-form_link__3QEsZ\",\"forget\":\"auth-form_forget__AnPg7\",\"btn\":\"auth-form_btn__HPbSV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"item_item__2zhhp\",\"promo\":\"item_promo__2_siX\",\"media\":\"item_media__3d70R\",\"img\":\"item_img__3noLN\",\"video\":\"item_video__1lqAH\",\"link\":\"item_link__129L5\",\"showPhone\":\"item_showPhone__15FAu\",\"phone\":\"item_phone__3SBZR\",\"header\":\"item_header__19Jse\",\"footer\":\"item_footer__2d_2L\",\"tag\":\"item_tag__1zCsW\",\"commentIcon\":\"item_commentIcon__3cVc4\",\"likeIcon\":\"item_likeIcon__25cqj\",\"comments\":\"item_comments__1aW_W\",\"likes\":\"item_likes__3Cy_H\",\"active\":\"item_active__2H01s\",\"headerBtn\":\"item_headerBtn__vryYt\",\"price\":\"item_price__1n3WF\",\"views\":\"item_views__9eH2t\",\"row\":\"item_row__CZXlv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"item_item__H9E5M\",\"map\":\"item_map__hDVH2\",\"media\":\"item_media__3nNOC\",\"img\":\"item_img__zYv-l\",\"video\":\"item_video__3KN6d\",\"link\":\"item_link__3_PEC\",\"header\":\"item_header__1VWIr\",\"footer\":\"item_footer__1kGoE\",\"commentIcon\":\"item_commentIcon__1Glub\",\"likeIcon\":\"item_likeIcon__SsKTn\",\"comments\":\"item_comments__242qB\",\"likes\":\"item_likes__1N9lu\",\"active\":\"item_active__2mu6z\",\"headerBtn\":\"item_headerBtn__6yqos\"};","export default __webpack_public_path__ + \"static/media/logo.35f541fb.png\";","import React from 'react';\r\nimport logo from '../../assets/img/logo.png';\r\nimport cn from 'classnames';\r\n\r\nimport s from './logo.module.scss';\r\n\r\nconst Logo = ({className}) => (\r\n    <div className={cn(s.container, className)}>\r\n        <img \r\n            src={logo} \r\n            alt=\"logo\"\r\n            className={s.logo} \r\n        />\r\n        <span className={s.name}>squadix</span>\r\n    </div>\r\n)\r\n\r\nexport default Logo;","import React from 'react';\r\nimport Logo from '../../components/logo';\r\nimport s from './auth.module.scss';\r\n\r\nconst AuthContainer = ({children}) => {\r\n\r\n  return (\r\n    <div className={s.wrap} >\r\n      <div className={s.form}>\r\n        <Logo className={s.logo} />\r\n        {children}\r\n        <span className={s.copyright}>© Squadix, 2021.</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AuthContainer;\r\n","import React from 'react';\r\nimport cn from'classnames';\r\n\r\nimport s from './loader.module.scss';\r\n\r\nconst Loader = ({size, preloader}) => (\r\n    <div className={cn({[s.wrap]: preloader})}>\r\n        <div className={cn(s.loader, {[s[size]]: size})}></div>\r\n    </div>\r\n)\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport Loader from '../loader';\r\nimport cn from 'classnames';\r\nimport s from './button.module.scss';\r\n\r\nconst Button = ({\r\n  text, \r\n  icon, \r\n  isLoading, \r\n  type = 'button', \r\n  disabled,\r\n  className,\r\n  styleType, \r\n  onClick = () => {}\r\n}) => (\r\n  <button \r\n    className={cn(s.button, className, s[styleType])}\r\n    type={type}\r\n    disabled={disabled}\r\n    onClick={() => onClick()}\r\n  >\r\n    {isLoading ? \r\n      <Loader /> :\r\n      <> \r\n        {text && text}\r\n        {icon && icon}\r\n      </>  \r\n    }\r\n  </button>\r\n);\r\n\r\nexport default Button;\r\n","import React, { useState } from 'react';\r\nimport cn from 'classnames';\r\n\r\nimport s from './input.module.scss';\r\n\r\nconst Input = ({label, wrapperClassname, className, error, onChange, value, ...props}) => {\r\n\r\n  const [isFocused, setIsFocused] = useState(false);\r\n\r\n  return (\r\n    <div className={cn(s.container, wrapperClassname)}>\r\n      {label && <span className={s.label}>{label}</span>}\r\n      <div className={cn(s.wrap, className, {[s.active]: isFocused})}>\r\n        <input\r\n          onFocus={() => setIsFocused(true)} \r\n          onBlur={() => setIsFocused(false)} \r\n          className={s.input}\r\n          onChange={(e) => onChange(e.target.value)} \r\n          value={value}\r\n          {...props} \r\n        />\r\n        {error && <span className={s.error}>{error}</span>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input;\r\n","import * as yup from 'yup';\r\n\r\nexport const loginSchema = yup.object().shape({\r\n  email: yup.string().email('Invalid email').required('E-mail is required'),\r\n  password: yup.string()\r\n    .required('No password provided') \r\n    .min(8, 'Password is too short - should be 8 chars minimum')\r\n    .max(25, 'Password is too long - should be 25 chars maximum')\r\n});\r\n\r\nexport const resetTokenSchema = yup.object().shape({\r\n  newPassword: yup.string()\r\n    .required('No password provided') \r\n    .min(8, 'Password is too short - should be 8 chars minimum')\r\n    .max(25, 'Password is too long - should be 25 chars maximum')\r\n});\r\n\r\nexport const resetSchema = yup.object().shape({\r\n  email: yup.string().email('Invalid email').required('E-mail is required'),\r\n});\r\n\r\nexport const changeSchema = yup.object().shape({\r\n  oldPassword: yup.string().required('Введите старый пароль'),\r\n  newPassword: yup.string()\r\n    .required('Введите новый пароль') \r\n    .min(8, 'Password is too short - should be 8 chars minimum')\r\n    .max(25, 'Password is too long - should be 25 chars maximum')\r\n});\r\n  \r\nexport const registerSchema = yup.object().shape({\r\n  displayName: yup.string().required('Name is required'), \r\n  email: yup.string().email('Invalid email').required('E-mail is required'),\r\n  password: yup.string()\r\n    .required('No password provided') \r\n    .min(8, 'Password is too short - should be 8 chars minimum')\r\n    .max(25, 'Password is too long - should be 25 chars maximum'),\r\n  confirmPassword: yup.string()\r\n    .required('Confirm password')\r\n    .oneOf([yup.ref('password')], 'Passwords must match'),\r\n  phone: yup.string(),\r\n});\r\n  \r\nexport const postSchema = yup.object().shape({\r\n  description: yup.string().required('Введите описание'),\r\n  eventLatitude: yup.string().required('Введите широту'),\r\n  eventLongitude: yup.string().required('Введите долготу'),\r\n});\r\n\r\nexport const productSchema = yup.object().shape({\r\n  name: yup.string().required('Введите наименование товара'),\r\n  description: yup.string(),\r\n  price: yup.string().required('Введите цену'),\r\n  postalDeliveryAvailable: yup.bool().required('Обязательное поле')\r\n});\r\n\r\nexport const userSchema = yup.object().shape({\r\n  displayName: yup.string().required('Введите отображаемое имя'),\r\n  description: yup.string(),\r\n  birthday: yup.string(),\r\n  country: yup.string(),\r\n  city: yup.string(),\r\n  phone: yup.string(),\r\n  team: yup.string(),\r\n});\r\n","export const API_URL = process.env.REACT_APP_API_URL;\r\n","import axios from 'axios';\r\nimport { API_URL } from '../constants/api.constants';\r\n\r\nexport const authUser = (data) => {\r\n  return axios.post(`${API_URL}signin`, data)\r\n}\r\n\r\nexport const changePass = (data) => {\r\n  return axios.patch(`${API_URL}users/me`, data)\r\n}\r\n\r\nexport const createUser = (data) => {\r\n  return axios.post(`${API_URL}users`, data)\r\n}\r\n\r\nexport const askPasswordReset = (data) => {\r\n  return axios.post(`${API_URL}reset`, data)\r\n}\r\n\r\nexport const resetPasswordConfirm = (data) => {\r\n  return axios.post(`${API_URL}reset-confirmation`, data)\r\n}","export const ERRORS = {\r\n  'Bad credentials': 'Неверный логин или пароль'\r\n}\r\n","export const HOME_PATH = '/';\r\nexport const LOGIN_PATH = '/login';\r\nexport const REGISTER_PATH = '/register';\r\nexport const RESTORE_PATH = '/reset';\r\nexport const RESTORE_TOKEN_PATH = '/reset/:token';\r\nexport const EVENTS_PATH = '/events';\r\nexport const STOCK_PATH = '/products';\r\nexport const NEWS_PATH = '/news';\r\nexport const NEWS_POST_PATH = '/news/:id';\r\nexport const EVENTS_POST_PATH = '/events/:id';\r\nexport const STOCK_POST_PATH = '/products/:id';\r\nexport const PROFILE_PATH = '/profile/:id';\r\nexport const ME_PATH = '/me';\r\n\r\nexport const POLICY_PATH = '/policy';\r\nexport const TERMS_PATH = '/terms';\r\nexport const RULES_PATH = '/rules';\r\n\r\nexport const APPS_PATH = '/apps';\r\n\r\n\r\nexport const UNAUTHORIZED_PAGES_PATH = [\r\n    LOGIN_PATH,\r\n    REGISTER_PATH,\r\n    RESTORE_PATH,\r\n    RESTORE_TOKEN_PATH\r\n]; \r\n","import React, { useState } from 'react';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '../button';\r\nimport Input from '../input';\r\nimport cn from 'classnames';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { loginSchema } from '../../helpers/validation-schemas';\r\nimport { authUser } from '../../services/auth';\r\nimport { toast } from 'react-toastify';\r\nimport { ERRORS } from '../../constants/error.constants';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { REGISTER_PATH, HOME_PATH, RESTORE_PATH } from '../../constants/routes.constants';\r\n\r\nimport s from './auth-form.module.scss';\r\n\r\nconst LoginForm = () => {\r\n\r\n  const history = useHistory();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const { handleSubmit, formState: { errors }, setValue, control } = useForm({\r\n    reValidateMode: 'onSubmit',\r\n    resolver: yupResolver(loginSchema),\r\n  });\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await authUser(data);\r\n      localStorage.setItem('accessToken', response.data.accessToken);\r\n      history.push(HOME_PATH);\r\n    } catch (e) {\r\n      toast.error(ERRORS[e?.response?.data?.message])\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <Controller \r\n          control={control}\r\n          name=\"email\"\r\n          render={({field: { value }}) => (\r\n            <Input \r\n              className={s.input}\r\n              placeholder=\"Email\"\r\n              onChange={(value) => setValue('email', value)}\r\n              error={errors?.email?.message}\r\n              value={value}\r\n            />\r\n          )}\r\n        />\r\n        <Controller \r\n          control={control}\r\n          name=\"password\"\r\n          render={({field: { value }}) => (\r\n            <Input \r\n              value={value}\r\n              className={s.input}\r\n              placeholder=\"Пароль\"\r\n              type='password'\r\n              onChange={(value) => setValue('password', value)}\r\n              error={errors?.password?.message}\r\n            />)} \r\n        />\r\n        <Link\r\n          className={cn(s.forget, s.link)} \r\n          to={RESTORE_PATH}\r\n        >\r\n          Забыли пароль?\r\n        </Link>\r\n        <Button\r\n          className={s.btn}\r\n          type=\"submit\"\r\n          text=\"ВОЙТИ\"\r\n          disabled={isLoading}\r\n          isLoading={isLoading}\r\n        />\r\n      </form>\r\n      <Link\r\n        className={s.link} \r\n        to={REGISTER_PATH}\r\n      >\r\n        Все еще нет аккаунта? Зарегистрируйтесь.\r\n      </Link>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\r\nimport AuthContainer from '../containers/auth';\r\nimport LoginForm from '../components/auth-forms/login-form';\r\n\r\nconst Login = () => {\r\n  return (\r\n    <AuthContainer>\r\n      <LoginForm />\r\n    </AuthContainer>\r\n  )\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '../button';\r\nimport Input from '../input';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { registerSchema } from '../../helpers/validation-schemas';\r\nimport { createUser } from '../../services/auth';\r\nimport { toast } from 'react-toastify';\r\nimport { ERRORS } from '../../constants/error.constants';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { LOGIN_PATH } from '../../constants/routes.constants';\r\nimport InputMask from 'react-input-mask';\r\n\r\nimport s from './auth-form.module.scss';\r\n\r\nconst RegisterForm = () => {\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const { handleSubmit, formState: { errors }, setValue } = useForm({\r\n    reValidateMode: 'onSubmit',\r\n    resolver: yupResolver(registerSchema),\r\n  });\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      setIsLoading(true);\r\n      await createUser(data);\r\n      toast.success('Пользователь успешно зарегистрирован');\r\n      history.push(LOGIN_PATH);\r\n    } catch (e) {\r\n      toast.error(ERRORS[e.response.data.message] || e.response.data.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <Input \r\n          className={s.input}\r\n          placeholder='Отображаемое имя'\r\n          onChange={(value) => setValue('displayName', value)}\r\n          error={errors?.displayName?.message}\r\n        />\r\n        <Input \r\n          className={s.input}\r\n          placeholder='Email'\r\n          onChange={(value) => setValue('email', value)}\r\n          error={errors?.email?.message}\r\n        />\r\n        <Input \r\n          className={s.input}\r\n          placeholder='Пароль'\r\n          type='password'\r\n          onChange={(value) => setValue('password', value)}\r\n          error={errors?.password?.message}\r\n        />\r\n        <Input \r\n          className={s.input}\r\n          placeholder='Пароль'\r\n          type='password'\r\n          onChange={(value) => setValue('confirmPassword', value)}\r\n          error={errors?.confirmPassword?.message}\r\n        />\r\n        <InputMask \r\n          mask=\"+375 99 999 99 99\"\r\n          name=\"phone\"\r\n          onChange={(value) => setValue('phone', value)}\r\n        >\r\n          {(inputProps) => <Input \r\n            className={s.input}\r\n            placeholder='Телефон'\r\n            value={inputProps.value}\r\n            error={errors?.phone?.message}\r\n          />}\r\n        </InputMask>\r\n        <Button\r\n          className={s.btn}\r\n          type='submit'\r\n          text='Зарегистрироваться'\r\n          disabled={isLoading}\r\n          isLoading={isLoading}\r\n        />\r\n      </form>\r\n      <Link\r\n        className={s.link} \r\n        to={LOGIN_PATH}\r\n      >\r\n        Есть аккаунт? Войти\r\n      </Link>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React from 'react';\r\nimport AuthContainer from '../containers/auth';\r\nimport RegisterForm from '../components/auth-forms/register-form';\r\n\r\nconst Register = () => {\r\n  return (\r\n    <AuthContainer>\r\n      <RegisterForm />\r\n    </AuthContainer>\r\n  )\r\n}\r\n\r\nexport default Register;\r\n","import React, { useState } from 'react';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport Button from '../button';\r\nimport Input from '../input';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { resetSchema, resetTokenSchema } from '../../helpers/validation-schemas';\r\nimport { askPasswordReset, resetPasswordConfirm } from '../../services/auth';\r\nimport { toast } from 'react-toastify';\r\nimport { ERRORS } from '../../constants/error.constants';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { LOGIN_PATH } from '../../constants/routes.constants';\r\n\r\nimport s from './auth-form.module.scss';\r\n\r\nconst ResetForm = () => {\r\n\r\n  const { token } = useParams();\r\n\r\n  const history = useHistory();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const { handleSubmit, formState: { errors }, setValue, control } = useForm({\r\n    reValidateMode: 'onSubmit',\r\n    resolver: yupResolver(token ? resetTokenSchema : resetSchema),\r\n  });\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      setIsLoading(true);\r\n      if(token) {\r\n        await resetPasswordConfirm({\r\n          ...data,\r\n          resetPasswordToken: token,\r\n        });\r\n        toast.success('Пароль успешно изменен');\r\n        setTimeout(() => history.push(LOGIN_PATH), 3000);\r\n        return;\r\n      }\r\n      await askPasswordReset(data);\r\n      toast.success('На вашу почту придет письмо с подтверждением')\r\n    } catch (e) {\r\n      toast.error(ERRORS[e?.response?.data?.message])\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        {token ? \r\n          <Controller \r\n            control={control}\r\n            name=\"newPassword\"\r\n            render={({field: { value }}) => (\r\n              <Input \r\n                className={s.input}\r\n                type=\"password\"\r\n                placeholder=\"Новый пароль\"\r\n                onChange={(value) => setValue('newPassword', value)}\r\n                error={errors?.newPassword?.message}\r\n                value={value}\r\n              />\r\n            )}\r\n          />\r\n          : <Controller \r\n            control={control}\r\n            name=\"email\"\r\n            render={({field: { value }}) => (\r\n              <Input \r\n                className={s.input}\r\n                placeholder=\"Email\"\r\n                onChange={(value) => setValue('email', value)}\r\n                error={errors?.email?.message}\r\n                value={value}\r\n              />\r\n            )}\r\n          />\r\n        }\r\n        <Button\r\n          className={s.btn}\r\n          type=\"submit\"\r\n          text=\"ОТПРАВИТЬ\"\r\n          disabled={isLoading}\r\n          isLoading={isLoading}\r\n        />\r\n      </form>\r\n      <Link\r\n        className={s.link} \r\n        to={LOGIN_PATH}\r\n      >\r\n        Есть аккаунт? Войти\r\n      </Link>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ResetForm;\r\n","import React from 'react';\r\nimport AuthContainer from '../containers/auth';\r\nimport ResetForm from '../components/auth-forms/reset-form';\r\n\r\nconst Reset = () => {\r\n  return (\r\n    <AuthContainer>\r\n      <ResetForm />\r\n    </AuthContainer>\r\n  )\r\n}\r\n\r\nexport default Reset;\r\n","import React from 'react';\r\nimport cn from 'classnames';\r\nimport moment from 'moment';\r\n\r\nimport s from './user-preview.module.scss';\r\n\r\nconst UserPreview = ({ name, avatar, date, localClassName, onClick = () => {} }) => {\r\n\r\n  return (\r\n    <button\r\n      onClick={onClick} \r\n      className={cn(s.container, {[s[localClassName]]: localClassName })}\r\n    >\r\n      {avatar ? \r\n        <img src={avatar} className={s.img} alt=\"avatar\" /> : \r\n        <div className={s.noAvatar}>\r\n          {name?.[0]}  \r\n        </div>\r\n      }\r\n      <div>\r\n        <span className={s.name}>{name}</span>\r\n        {date && <span className={s.date}>{moment(date).format('DD MMMM YYYY, HH:mm')}</span>}\r\n      </div>\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default UserPreview;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { ME_PATH, LOGIN_PATH, POLICY_PATH, RULES_PATH, TERMS_PATH } from '../../constants/routes.constants';\r\nimport UserPreview from '../user-preview';\r\nimport cn from 'classnames';\r\n\r\nimport s from './header-menu.module.scss';\r\n\r\nconst HeaderMenu = ({className, displayName, profilePictureUrl}) => {\r\n\r\n    const menuRef = useRef();\r\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const handleClickOutside = (e) => {\r\n      if (menuRef.current && !menuRef.current.contains(e.target)) {\r\n        setIsMenuOpen(false);\r\n      }\r\n    }\r\n  \r\n    const onLogout = () => {\r\n        localStorage.removeItem('accessToken');\r\n        history.push(LOGIN_PATH);\r\n    }\r\n\r\n    useEffect(() => {\r\n      document.addEventListener(\"mousedown\", handleClickOutside);\r\n      return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    }, [])\r\n\r\n    return (\r\n        <div \r\n            ref={menuRef}\r\n            className={cn(s.container, className)}\r\n        >\r\n            <UserPreview \r\n                name={displayName}\r\n                avatar={profilePictureUrl}\r\n                onClick={() => setIsMenuOpen(!isMenuOpen)}\r\n            />\r\n            {isMenuOpen && \r\n                <ul className={s.menu}>\r\n                    <li>\r\n                        <Link to={ME_PATH}>Профиль</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to={POLICY_PATH}>Политика</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to={RULES_PATH}>Правила</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to={TERMS_PATH}>Условия</Link>\r\n                    </li>\r\n                    <li>\r\n                        <button\r\n                            onClick={() => onLogout()}\r\n                        >\r\n                            Выйти\r\n                        </button>\r\n                    </li>\r\n                </ul>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderMenu;","import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport Logo from '../../../components/logo';\r\nimport { useSelector } from 'react-redux';\r\nimport { NEWS_PATH, EVENTS_PATH, STOCK_PATH, HOME_PATH } from '../../../constants/routes.constants';\r\n\r\nimport s from './header.module.scss';\r\nimport HeaderMenu from '../../../components/header-menu';\r\n\r\nconst Header = () => {\r\n\r\n  const { displayName, profilePictureUrl } = useSelector(state => state.user.me); \r\n\r\n  return (\r\n    <header className={s.header}>\r\n      <Link to={HOME_PATH}>\r\n        <Logo className={s.logo} />\r\n      </Link>\r\n      <NavLink to={NEWS_PATH} className={s.link} activeClassName=\"active-nav\">\r\n        Новости\r\n      </NavLink>\r\n      <NavLink to={EVENTS_PATH} className={s.link} activeClassName=\"active-nav\">\r\n        События\r\n      </NavLink>\r\n      <NavLink to={STOCK_PATH} className={s.link} activeClassName=\"active-nav\">\r\n        Барахолка\r\n      </NavLink>\r\n      <HeaderMenu \r\n        className={s.me}\r\n        displayName={displayName}\r\n        profilePictureUrl={profilePictureUrl}        \r\n      />\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","import axios from 'axios';\r\nimport { LOGIN_PATH } from '../constants/routes.constants';\r\n\r\nexport const configureInterceptors = (history, token) => {\r\n\r\n  axios.interceptors.request.use(function (config) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n    return config;\r\n  });\r\n  \r\n  axios.interceptors.response.use((response) => {\r\n    return response\r\n  }, async function (error) {\r\n    const originalRequest = error.config;\r\n    if ((error.response.status === 403 || error.response.status === 401) && !originalRequest._retry) {\r\n      localStorage.removeItem('accessToken');\r\n      history.push(LOGIN_PATH);\r\n    }\r\n    return Promise.reject(error);\r\n  });\r\n\r\n} \r\n","import axios from 'axios';\r\nimport { API_URL } from '../constants/api.constants';\r\n\r\nexport const me = (token) => {\r\n  return axios.get(`${API_URL}users/me`, {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  })\r\n}\r\n\r\nexport const getUser = (id) => {\r\n  return axios.get(`${API_URL}users/${id}`)\r\n}\r\n\r\nexport const sendAvatar = (file) => {\r\n  return axios.post(`${API_URL}users/me/avatar`, file)\r\n}\r\n\r\nexport const deleteAvatar = () => {\r\n  return axios.delete(`${API_URL}users/me/avatar`)\r\n}\r\n\r\nexport const sendUserData = (data) => {\r\n  return axios.put(`${API_URL}users/me`, data)\r\n}\r\n","// EVENTS ACTIONS\r\n\r\nexport const SET_EVENTS = 'setEvents';\r\nexport const SET_EVENTS_POST = 'setEventsPost';\r\nexport const SET_EVENTS_POST_COMMENTS = 'setEventsPostComments';\r\nexport const CLEAR_EVENTS_POST = 'clearEventsPost';\r\nexport const SET_EVENT_COMMENT = 'setEventComment';\r\nexport const LIKE_EVENT = 'likeEvent';\r\nexport const LIKE_EVENTS_POST = 'likeEventsPost';\r\nexport const CLEAR_EVENTS = 'clearEvents';\r\nexport const ADD_EVENTS_POST = 'addEventsPost';\r\n\r\n// NEWS ACTIONS\r\n\r\nexport const SET_NEWS = 'setNews';\r\nexport const SET_NEWS_POST = 'setNewsPost';\r\nexport const SET_NEWS_POST_COMMENTS = 'setNewsPostComments';\r\nexport const CLEAR_NEWS_POST = 'clearNewsPost';\r\nexport const LIKE_NEWS = 'likeNews';\r\nexport const SET_NEWS_COMMENT = 'setNewsComment';\r\nexport const LIKE_NEWS_POST = 'likeNewsPost';\r\nexport const CLEAR_NEWS = 'clearNews';\r\nexport const ADD_NEWS_POST = 'addNewsPost';\r\n\r\n// MODAL ACTIONS\r\n\r\nexport const CHANGE_MODALS_STATE = 'changeModalsState';\r\n\r\n// STOCK ACTIONS\r\n\r\nexport const SET_CATEGORIES = 'setCategories';\r\nexport const SET_FILTERS = 'setFilters';\r\nexport const SET_PRODUCTS = 'setProducts';\r\nexport const SET_POST = 'setPost';\r\nexport const ADD_NEW_PRODUCT = 'addNewProduct';\r\n\r\n// USER ACTIONS\r\n\r\nexport const SET_ME = 'setMe';\r\nexport const SET_USER = 'setUser';\r\nexport const SET_AVATAR = 'setAvatar';\r\nexport const REMOVE_AVATAR = 'removeAvatar';\r\n","import { me, getUser, sendAvatar, sendUserData, deleteAvatar } from '../services/user';\r\nimport { SET_ME, SET_USER, SET_AVATAR, REMOVE_AVATAR } from '../constants/actions.constants';\r\n\r\nexport const setMe = (token) => {\r\n  return async (dispatch) => {\r\n    const userData = await me(token);\r\n    dispatch({\r\n      type: SET_ME,\r\n      payload: userData?.data\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateMe = (data) => {\r\n  return async (dispatch) => {\r\n    const userData = await sendUserData(data);\r\n    dispatch({\r\n      type: SET_ME,\r\n      payload: userData?.data\r\n    })\r\n  }\r\n}\r\n\r\nexport const removeAvatar = () => {\r\n  return async (dispatch) => {\r\n    await deleteAvatar();\r\n    dispatch({\r\n      type: REMOVE_AVATAR,\r\n    })\r\n  }\r\n}\r\n\r\nexport const setUser = (id) => {\r\n  return async (dispatch) => {\r\n    const userData = await getUser(id);\r\n    dispatch({\r\n      type: SET_USER,\r\n      payload: userData?.data\r\n    })\r\n  }\r\n}\r\n\r\nexport const clearUser = () => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: SET_USER,\r\n      payload: {}\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateAvatar = (file) => {\r\n  return async (dispatch) => {\r\n    const avatar = await sendAvatar(file);\r\n\r\n    dispatch({\r\n      type: SET_AVATAR,\r\n      payload: avatar?.data?.profilePictureUrl\r\n    })\r\n  }\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport Header from './header';\r\nimport cn from 'classnames';\r\nimport { configureInterceptors } from '../../services/axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { setMe } from '../../actions/user-actions';\r\nimport { useDispatch } from 'react-redux';\r\nimport moment from 'moment';\r\nimport 'moment/locale/ru';\r\n\r\nimport s from './layout.module.scss';\r\n\r\nconst Layout = ({children, className}) => {\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    moment.locale('ru');\r\n\r\n    (async () => {\r\n      const token = localStorage.getItem('accessToken');\r\n      await configureInterceptors(history, token);\r\n      await dispatch(setMe(token));\r\n    })()\r\n  }, [])\r\n\r\n  return (\r\n    <div className={cn(s.container, className)}>\r\n      <Header />\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout;\r\n","import React, { useState } from 'react';\r\nimport cn from 'classnames';\r\nimport UserPreview from '../../../components/user-preview';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { FaComment, FaHeart } from \"react-icons/fa\";\r\nimport Youtube from 'react-youtube';\r\nimport { FaRegCopy, FaExternalLinkAlt } from 'react-icons/fa';\r\nimport { toast } from 'react-toastify';\r\nimport FSLightbox from 'fslightbox-react';\r\nimport moment from 'moment';\r\nimport { YMaps, Map, Placemark } from 'react-yandex-maps';\r\n\r\nimport s from './item.module.scss';\r\n\r\n\r\nconst FeedItem = ({\r\n  info: {\r\n    id,\r\n    shortDescription,\r\n    description,\r\n    imageUrls,\r\n    authorId,\r\n    authorName,\r\n    authorAvatarUrl,\r\n    createdAt,\r\n    likesCount,\r\n    commentsCount,\r\n    videoUrl,\r\n    liked,\r\n    eventDate,\r\n    eventLatitude,\r\n    eventLongitude,\r\n    startTime\r\n  },\r\n  onLike, \r\n  isPost,\r\n  className\r\n}) => {\r\n\r\n  const location = useLocation();\r\n  const pathname = location.pathname; \r\n  const backURL = pathname.split('/');\r\n  const [isSliderShow, setIsSliderShow] = useState(false);\r\n  const history = useHistory();\r\n  \r\n  const copyLink = () => {\r\n    const linkToCopy = isPost ? window.location.origin + pathname : `${window.location.origin}${pathname}/${id}`;\r\n    navigator.clipboard.writeText(linkToCopy);\r\n    toast.success('Ссылка скопирована.');\r\n  }\r\n\r\n  return (\r\n    <div className={cn(s.item, className)}>\r\n      <div className={s.header}>\r\n        <UserPreview \r\n          name={authorName}\r\n          avatar={authorAvatarUrl}\r\n          date={createdAt}\r\n          localClassName=\"post\"\r\n          onClick={() => history.push(`/profile/${authorId}`)}\r\n        />\r\n        <button\r\n          className={s.headerBtn}\r\n          title=\"Скопировать URL\"\r\n          onClick={() => copyLink()}\r\n        >\r\n          <FaRegCopy />\r\n        </button>\r\n        {<Link\r\n          target={isPost ? '_self' : '_blank'}\r\n          className={s.headerBtn}\r\n          to={isPost ? `/${backURL[1]}` : `${pathname}/${id}`}\r\n          title={`Перейти к ${isPost ? 'ленте' : 'посту'}`} \r\n        >\r\n          <FaExternalLinkAlt />\r\n        </Link>}\r\n      </div>\r\n      <div className={s.media}>\r\n        {imageUrls?.length \r\n          ? <>\r\n              <img \r\n                className={s.img} \r\n                src={imageUrls[0]}\r\n                onClick={() => setIsSliderShow(!isSliderShow)}\r\n                alt=\"preview\"\r\n              /> \r\n              <FSLightbox\r\n                toggler={isSliderShow}\r\n                sources={imageUrls}\r\n                type=\"image\"\r\n              />\r\n            </>\r\n          : videoUrl\r\n          ? <Youtube \r\n              videoId={videoUrl}\r\n              className={s.video}\r\n            />\r\n        : null}\r\n      </div>\r\n      {eventDate && <div>Дата: <b>{moment(eventDate).format('DD.MM.yyyy')}</b></div>}\r\n      {startTime && <div>Время: <b>{moment(startTime).format('HH:mm')}</b></div>}\r\n      {shortDescription && <h4>{shortDescription}</h4>}\r\n      <p>\r\n        {description?.length > 255 && !isPost ? description.slice(0, 255) + '...' : description}\r\n      </p>\r\n      {eventLatitude && eventLongitude && isPost &&\r\n        <YMaps>\r\n          <b>Координаты:</b>\r\n          <Map\r\n            className={s.map}\r\n            width=\"100%\"\r\n            height=\"350px\" \r\n            defaultState={{\r\n              center: [eventLatitude, eventLongitude], zoom: 12 \r\n            }}\r\n          >\r\n            <Placemark \r\n              geometry={[eventLatitude, eventLongitude]} \r\n            />\r\n          </Map>\r\n        </YMaps>\r\n      }\r\n      <div className={s.footer}>\r\n        {!isPost && \r\n          <Link\r\n            to={`${pathname}/${id}`} \r\n            className={s.comments}\r\n          >\r\n            <FaComment\r\n              className={s.commentIcon} \r\n            />\r\n            {commentsCount}\r\n          </Link>\r\n        }\r\n        <div className={s.likes}>\r\n          <button\r\n            onClick={() => onLike(id)}\r\n          >\r\n            <FaHeart \r\n              className={cn(s.likeIcon, {[s.active]: liked})}\r\n            />\r\n          </button>\r\n          {likesCount}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default FeedItem;\r\n","import React from 'react';\r\nimport ReactPaginate from 'react-paginate';\r\nimport { FaAngleRight, FaAngleLeft } from 'react-icons/fa';\r\nimport s from './pagination.module.scss';\r\n\r\nconst Pagination = ({totalPages, onChangePage}) => {\r\n  return (\r\n    <ReactPaginate \r\n      pageCount={totalPages}\r\n      pageRangeDisplayed={3}\r\n      marginPagesDisplayed={10}\r\n      onPageChange={(page) => onChangePage(page.selected)}\r\n      containerClassName={s.pagination}\r\n      activeClassName={s.paginationActive}\r\n      previousLabel={<FaAngleLeft />}\r\n      nextLabel={<FaAngleRight />}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\nimport FeedItem from './item';\r\n\r\nimport s from './feed.module.scss';\r\n\r\nimport Loader from '../../components/loader';\r\nimport Pagination from '../../components/pagination';\r\n\r\nconst Feed = ({list, totalPages, onChangePage, isLoading, onLike}) => {\r\n\r\n  return (\r\n    <div className={s.feed}>\r\n      {isLoading && <Loader preloader />}\r\n      {totalPages > 1 &&\r\n        <Pagination \r\n          totalPages={totalPages}\r\n          onChangePage={onChangePage}\r\n        />\r\n      }\r\n      {list?.map(item => (\r\n        <FeedItem\r\n          onLike={onLike}\r\n          className={s.item}\r\n          key={item.id} \r\n          info={item} \r\n        />\r\n      ))}\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Feed;\r\n","import axios from 'axios';\r\nimport { API_URL } from '../constants/api.constants';\r\n\r\nexport const getEvents = (page) => {\r\n  return axios.get(`${API_URL}events?page=${page}`)\r\n}\r\n\r\nexport const getEventsPostComments = (id) => {\r\n  return axios.get(`${API_URL}events/${id}/comments`)\r\n}\r\n\r\nexport const getEventPost = (id) => {\r\n  return axios.get(`${API_URL}events/${id}`)\r\n}\r\n\r\nexport const addNewEvent = (data) => {\r\n  return axios.post(`${API_URL}events`, data)\r\n}\r\n\r\nexport const likeEventsComment = (id) => {\r\n  return axios.put(`${API_URL}events/comments/${id}/like`)\r\n}\r\n\r\nexport const addEventsPostComment = (id, data) => {\r\n  return axios.post(`${API_URL}events/${id}/comments`, data)\r\n}\r\n\r\nexport const likeEvent = (id) => {\r\n  return axios.put(`${API_URL}events/${id}/like`)\r\n}\r\n\r\nexport const getAddressByCoords = (lan, lon) => {\r\n  return axios.get(`https://eu1.locationiq.com/v1/reverse.php?key=7166ec2458efb8&lat=${lan}&lon=${lon}&format=json`);\r\n}\r\n","import { \r\n  getEvents,\r\n  getEventsPostComments,\r\n  getEventPost,\r\n  likeEventsComment,\r\n  addEventsPostComment,\r\n  likeEvent,\r\n  addNewEvent\r\n} from '../services/events';\r\nimport {\r\n  SET_EVENTS,\r\n  SET_EVENTS_POST,\r\n  SET_EVENTS_POST_COMMENTS,\r\n  CLEAR_EVENTS_POST,\r\n  SET_EVENT_COMMENT,\r\n  LIKE_EVENT,\r\n  LIKE_EVENTS_POST,\r\n  CLEAR_EVENTS,\r\n  ADD_EVENTS_POST\r\n} from '../constants/actions.constants';\r\n\r\nexport const setEvents = (page) => {\r\n  return async (dispatch) => {\r\n    const events = await getEvents(page);\r\n    dispatch({\r\n      type: SET_EVENTS,\r\n      payload: events?.data\r\n    })\r\n  }\r\n}\r\n\r\nexport const setEventsPost = (id) => {\r\n  return async (dispatch) => {\r\n    const post = await getEventPost(id);\r\n    dispatch({\r\n      type: SET_EVENTS_POST,\r\n      payload: post?.data\r\n    })\r\n  }\r\n}\r\n\r\nexport const addNewEvents = (data) => {\r\n  return async (dispatch) => {\r\n    const newEvent = await addNewEvent(data);\r\n    dispatch({\r\n      type: ADD_EVENTS_POST,\r\n      payload: newEvent?.data\r\n    })\r\n  }\r\n}\r\n\r\nexport const setEventsPostComments = (id) => {\r\n  return async (dispatch) => {\r\n    const comments = await getEventsPostComments(id);\r\n    dispatch({\r\n      type: SET_EVENTS_POST_COMMENTS,\r\n      payload: comments?.data\r\n    })\r\n  }\r\n}\r\n\r\nexport const clearEventsPost = () => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: CLEAR_EVENTS_POST,\r\n      payload: {}\r\n    })\r\n  }\r\n}\r\n\r\nexport const toggleLikeEventsComment = (id) => {\r\n  return async (dispatch, getState) => {\r\n    const likes = await likeEventsComment(id);\r\n    const commentsList = getState().events.comments.content;\r\n\r\n    const newCommentsState = commentsList.map(item => {\r\n      if (item.id === id) {\r\n        return {...item, ...likes.data}\r\n      }\r\n      return item;\r\n    });\r\n    \r\n    dispatch({\r\n      type: SET_EVENT_COMMENT,\r\n      payload: newCommentsState\r\n    })\r\n  }\r\n}\r\n\r\nexport const setEventsPostComment = (id, data) => {\r\n  return async (dispatch, getState) => {\r\n    const comment = await addEventsPostComment(id, data);\r\n    const commentsList = getState().events.comments.content;\r\n\r\n    const newCommentsState = [...commentsList, comment.data];\r\n    \r\n    dispatch({\r\n      type: SET_EVENT_COMMENT,\r\n      payload: newCommentsState\r\n    })\r\n  }\r\n}\r\n\r\nexport const toggleLikeEvent = (id) => {\r\n  return async (dispatch, getState) => {\r\n    const likes = await likeEvent(id);\r\n    const eventsList = getState().events.content;\r\n\r\n    const newEventsState = eventsList.map(item => {\r\n      if (item.id === id) {\r\n        return {...item, ...likes.data}\r\n      }\r\n      return item;\r\n    });\r\n\r\n    dispatch({\r\n      type: LIKE_EVENT,\r\n      payload: newEventsState\r\n    })\r\n  }\r\n}\r\n\r\nexport const toggleLikePostEvent = (id) => {\r\n  return async (dispatch, getState) => {\r\n    const likes = await likeEvent(id);\r\n    const eventPost = getState().events.post;\r\n\r\n    dispatch({\r\n      type: LIKE_EVENTS_POST,\r\n      payload: {...eventPost, ...likes.data}\r\n    })\r\n  }\r\n}\r\n\r\nexport const clearEvents = () => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: CLEAR_EVENTS,\r\n      payload: {}\r\n    })\r\n  }\r\n}\r\n","export const COMMENT_MODAL = 'commentModal';\r\nexport const POST_MODAL = 'postModal';\r\nexport const PRODUCT_MODAL = 'productModal';\r\nexport const CHANGE_PASS_MODAL = 'changePassModal';\r\n","export const ROLES = {\r\n    user: 'USER',\r\n    admin: 'ADMIN',\r\n    organizer: 'ORGANIZER'\r\n};","import { CHANGE_MODALS_STATE } from '../constants/actions.constants';\r\n\r\nexport const openModal = (modal, params = {}) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: CHANGE_MODALS_STATE,\r\n      payload: {\r\n        [modal]: {\r\n          show: true,\r\n          params\r\n        }\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const closeModal = (modal) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: CHANGE_MODALS_STATE,\r\n      payload: {\r\n        [modal]: {}\r\n      }\r\n    })\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport s from './add-btn.module.scss';\r\n\r\nconst AddButton = ({onClick}) => (\r\n  <button\r\n    onClick={onClick} \r\n    className={s.btn}\r\n  >\r\n    +\r\n  </button>\r\n);\r\n\r\nexport default AddButton;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Layout from '../layout';\r\nimport Feed from '../feed';\r\nimport { setEvents, clearEvents, toggleLikeEvent, addNewEvents } from '../../actions/events-actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { ERRORS } from '../../constants/error.constants';\r\nimport { POST_MODAL } from '../../constants/modal.constants';\r\nimport { ROLES } from '../../constants/user.constants';\r\nimport { openModal } from '../../actions/modals-actions';\r\nimport AddButton from '../../components/add-btn';\r\n\r\nconst EventsContainer = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { roles } = useSelector(state => state.user.me);\r\n  const {content, totalPages, currentPage} = useSelector(state => state.events);\r\n  const addPermission = roles?.includes(ROLES.admin) || roles?.includes(ROLES.organizer);\r\n \r\n  const onChangePage = async (page) => {\r\n    try {\r\n      setIsLoading(true);\r\n      await dispatch(setEvents(page));\r\n    } catch(e) {\r\n      toast.error(ERRORS[e?.response?.data?.message])\r\n    } finally {\r\n      setIsLoading(false);\r\n    } \r\n  }\r\n\r\n  const eventLikeHandler = async (id) => {\r\n    try {\r\n      await dispatch(toggleLikeEvent(id));\r\n    } catch(e) {\r\n      toast.error(ERRORS[e?.response?.data?.message])\r\n    }\r\n  }\r\n\r\n  const openPostModal = () => {\r\n    dispatch(openModal(POST_MODAL, {\r\n      isEvent: true,\r\n      addPost: (data) => dispatch(addNewEvents(data)),\r\n    }))\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(setEvents(0));\r\n    return () => dispatch(clearEvents());\r\n  }, []);\r\n\r\n  return (\r\n    <Layout>\r\n      {addPermission && <AddButton onClick={openPostModal} />}\r\n      <Feed\r\n        onLike={eventLikeHandler}\r\n        isLoading={isLoading}\r\n        list={content}\r\n        totalPages={totalPages}\r\n        currentPage={currentPage}\r\n        onChangePage={onChangePage}\r\n      />\r\n    </Layout>\r\n  )\r\n\r\n}\r\n\r\nexport default EventsContainer;\r\n","import React from 'react';\r\nimport EventsContainer from '../containers/events';\r\n\r\nconst Events = () => (\r\n  <EventsContainer />\r\n);\r\n\r\nexport default Events;\r\n","import axios from 'axios';\r\nimport { API_URL } from '../constants/api.constants';\r\n\r\nexport const getCategories = () => {\r\n  return axios.get(`${API_URL}categories`)\r\n}\r\n\r\nexport const getProducts = (filter, page) => {\r\n  return axios.get(`${API_URL}products/filter`, {\r\n    params: {\r\n      categories: filter.join(','),\r\n      page: page,\r\n      sortDir: 'DESC',\r\n      sortField: 'createdAt'\r\n    }\r\n  })\r\n}\r\n\r\nexport const getProduct = (id) => {\r\n  return axios.get(`${API_URL}products/${id}`)\r\n}\r\n\r\nexport const addProduct = (data) => {\r\n  return axios.post(`${API_URL}products/`, data)\r\n}\r\n","import { getCategories, getProducts, getProduct } from '../services/stock';\r\nimport {\r\n  SET_CATEGORIES,\r\n  SET_FILTERS,\r\n  SET_PRODUCTS,\r\n  SET_POST,\r\n} from '../constants/actions.constants';\r\n\r\nexport const setCategories = () => {\r\n  return async (dispatch) => {\r\n    const categories = await getCategories();\r\n    dispatch({\r\n      type: SET_CATEGORIES,\r\n      payload: categories?.data\r\n    })\r\n  }\r\n}\r\n\r\nexport const setFilters = (filters) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: SET_FILTERS,\r\n      payload: filters\r\n    })\r\n  }\r\n}\r\n\r\nexport const setProducts = (page) => {\r\n  return async (dispatch, getState) => {\r\n    const filterArr = getState().stock.filters;\r\n    const products = await getProducts(filterArr, page);\r\n\r\n    dispatch({\r\n      type: SET_PRODUCTS,\r\n      payload: products?.data\r\n    })\r\n  }\r\n}\r\n\r\nexport const setStockPost = (id) => {\r\n  return async (dispatch) => {\r\n    const product = await getProduct(id);\r\n\r\n    dispatch({\r\n      type: SET_POST,\r\n      payload: product?.data\r\n    })\r\n  }\r\n}\r\n\r\nexport const clearStockPost = (id) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: SET_POST,\r\n      payload: {}\r\n    })\r\n  }\r\n}\r\n","import React from 'react';\r\nimport cn from 'classnames';\r\nimport s from './checkbox.module.scss';\r\n\r\nconst Checkbox = ({onChange, checked, label, id, className}) => {\r\n\r\n  return (\r\n    <label className={cn(s.container, className)} htmlFor={id}>\r\n      <input \r\n        id={id}\r\n        type=\"checkbox\" \r\n        checked={checked}\r\n        onChange={() => onChange(!checked)}\r\n      />\r\n      <span className={s.checkmark}></span>\r\n      {label && <span className={s.label} htmlFor={id}>{label}</span>}\r\n    </label>\r\n  )\r\n}\r\n\r\nexport default Checkbox;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Checkbox from '../../../components/checkbox';\r\nimport Button from '../../../components/button';\r\nimport { setFilters } from '../../../actions/stock-actions';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport s from './filter.module.scss';\r\n\r\nconst Filter = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [checkedCategories, setCheckedCategories] = useState([]);\r\n  const categories = useSelector(state => state.stock.categories);\r\n  \r\n  const onCheckHandler = (value, name) => {\r\n    if (!value) {\r\n      const newValues = checkedCategories.filter(item => item !== name);\r\n      setCheckedCategories(newValues);\r\n      return;\r\n    }\r\n    setCheckedCategories([...checkedCategories, name]);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const allCategories = categories?.map(item => item.name);\r\n    setCheckedCategories(allCategories);\r\n    dispatch(setFilters(allCategories));\r\n  }, [categories])\r\n\r\n  const setFiltersHandler = () => {\r\n    if (checkedCategories.length) {\r\n      dispatch(setFilters(checkedCategories));\r\n      return;\r\n    }\r\n    toast.error('Выберите хотя бы одну категорию!');\r\n  }\r\n\r\n  return (\r\n    <div className={s.filter}>\r\n      <span className={s.title}>Категории</span>\r\n      {categories?.map(({id, name}) => (\r\n        <Checkbox\r\n          className={s.checkbox}\r\n          key={id} \r\n          label={name} \r\n          id={id} \r\n          checked={checkedCategories.includes(name)} \r\n          onChange={(value) => onCheckHandler(value, name)}\r\n        />\r\n      ))}\r\n      <Button\r\n        className={s.btn}\r\n        onClick={setFiltersHandler}\r\n        text=\"Применить\" \r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport cn from 'classnames';\r\n\r\nimport s from './tag.module.scss';\r\n\r\nconst Tag = ({text, className}) => {\r\n  return (\r\n    <div className={cn(s.tag, className)}>\r\n      {text}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Tag;\r\n","import React, { useState } from 'react';\r\nimport cn from 'classnames';\r\nimport UserPreview from '../../../../components/user-preview';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { FaRegCopy, FaExternalLinkAlt } from 'react-icons/fa';\r\nimport { toast } from 'react-toastify';\r\nimport Tag from '../../../../components/tag';\r\nimport FSLightbox from 'fslightbox-react';\r\n\r\nimport s from './item.module.scss';\r\n\r\nconst FeedItem = ({\r\n  info: {\r\n    id,\r\n    description,\r\n    name,\r\n    price,\r\n    postalDeliveryAvailable,\r\n    category,\r\n    region,\r\n    promoUrl,\r\n    reserved,\r\n    authorPhone,\r\n    imageUrls,\r\n    authorId,\r\n    authorName,\r\n    authorAvatarUrl,\r\n    createdAt,\r\n    views\r\n  }, \r\n  isPost,\r\n  className\r\n}) => {\r\n\r\n  const [isPhoneShow, setIsPhoneShow] = useState(false);\r\n  const { pathname } = useLocation(); \r\n  const backURL = pathname.split('/');\r\n  const history = useHistory();\r\n  const [isSliderShow, setIsSliderShow] = useState(false);\r\n\r\n  const copyLink = () => {\r\n    const linkToCopy = isPost ? window.location.origin + pathname : `${window.location.origin}${pathname}/${id}`;\r\n    navigator.clipboard.writeText(linkToCopy);\r\n    toast.success('Ссылка скопирована.');\r\n  }\r\n\r\n  return (\r\n    <div className={cn(s.item, {[s.promo]: promoUrl}, className)}>\r\n      <div className={s.header}>\r\n        <UserPreview \r\n          name={authorName}\r\n          avatar={authorAvatarUrl}\r\n          date={promoUrl ? null : createdAt}\r\n          localClassName=\"post\"\r\n          onClick={() => history.push(`/profile/${authorId}`)}\r\n          className={s.link}\r\n        />\r\n        {!promoUrl && <>\r\n          {isPhoneShow ?\r\n            <a className={s.phone} href={`tel:${authorPhone}`}>{authorPhone}</a> : \r\n            <button\r\n              className={s.showPhone}\r\n              onClick={() => setIsPhoneShow(true)}\r\n            >\r\n              Показать телефон\r\n            </button>  \r\n          }\r\n          <button\r\n            className={s.headerBtn}\r\n            title=\"Скопировать URL\"\r\n            onClick={() => copyLink()}\r\n          >\r\n            <FaRegCopy />\r\n          </button>\r\n          </>\r\n        }\r\n        {promoUrl ? \r\n          <a\r\n            target=\"blank\" \r\n            href={promoUrl} \r\n            rel=\"noreferrer nofollow\"\r\n          >\r\n            <FaExternalLinkAlt />\r\n          </a>\r\n          : <Link\r\n              target={isPost ? '_self' : '_blank'} \r\n              rel=\"noopener noreferrer\"\r\n              className={s.headerBtn}\r\n              to={isPost ? `/${backURL[1]}` : `${pathname}/${id}`}\r\n              title={`Перейти к ${isPost ? 'ленте' : 'посту'}`} \r\n          >\r\n            <FaExternalLinkAlt />\r\n          </Link>\r\n        }\r\n      </div>\r\n      <div className={s.media}>\r\n        {imageUrls?.length \r\n          ? \r\n            <>\r\n              <img \r\n                className={s.img} \r\n                src={imageUrls[0]}\r\n                onClick={() => setIsSliderShow(!isSliderShow)}\r\n                alt=\"slider\"\r\n              />     \r\n              \r\n            </>\r\n          : null}\r\n          <FSLightbox\r\n            toggler={isSliderShow}\r\n            sources={imageUrls}\r\n            type=\"image\"\r\n          />\r\n      </div>\r\n      <div className={s.row}>\r\n        <h4>{name}</h4>\r\n        <span className={s.views}>Просмотров: {views}</span>\r\n      </div>\r\n      {isPost && <p>{description}</p>}\r\n      <div className={s.footer}>\r\n        {category && <Tag className={s.tag} text={category} />}\r\n        {region && <Tag className={s.tag} text={region} />}\r\n        {postalDeliveryAvailable && <Tag className={s.tag} text=\"Доставка почтой\" />}\r\n        {reserved && <Tag className={s.tag} text=\"Зарезервировано\" />}\r\n        <span className={s.price}>{price} BYN</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FeedItem;\r\n","import React from 'react';\r\nimport FeedItem from './item';\r\nimport Pagination from '../../../components/pagination';\r\nimport Loader from '../../../components/loader';\r\n\r\nimport s from './feed.module.scss';\r\n\r\nconst StockFeed = ({list, totalPages, onChangePage, isLoading}) => {\r\n\r\n  return (\r\n    <div className={s.feed}>\r\n      {isLoading && <Loader preloader />}\r\n      {totalPages > 1 &&\r\n        <Pagination \r\n          totalPages={totalPages}\r\n          onChangePage={onChangePage}\r\n        />\r\n      }\r\n      {list?.map(item => (\r\n        <FeedItem\r\n          className={s.item}\r\n          key={item.id} \r\n          info={item} \r\n        />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StockFeed;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Layout from '../layout';\r\nimport AddButton from '../../components/add-btn';\r\nimport { setCategories, setProducts } from '../../actions/stock-actions';\r\nimport { addProduct } from '../../services/stock';\r\nimport { openModal } from '../../actions/modals-actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Filter from './filter';\r\nimport StockFeed from './feed';\r\nimport { ERRORS } from '../../constants/error.constants';\r\nimport { PRODUCT_MODAL } from '../../constants/modal.constants';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport s from './stock.module.scss';\r\n\r\nconst StockContainer = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const { filters, categories, content, totalPages } = useSelector(state => state.stock);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n\r\n  const onChangePage = async (page) => {\r\n    try {\r\n      setIsLoading(true);\r\n      await dispatch(setProducts(page));\r\n    } catch(e) {\r\n      toast.error(ERRORS[e?.response?.data?.message])\r\n    } finally {\r\n      setIsLoading(false);\r\n    } \r\n  }\r\n\r\n  const openAddProductModal = () => {\r\n    dispatch(openModal(PRODUCT_MODAL, {\r\n      categories: categories,\r\n      addProduct: (data) => addProduct(data),\r\n    }))\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(setCategories());\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (filters.length) {\r\n      dispatch(setProducts(0));\r\n    }\r\n  }, [filters])\r\n\r\n  return (\r\n    <Layout className={s.layout}>\r\n      <AddButton onClick={openAddProductModal} />\r\n      <Filter />\r\n      <StockFeed\r\n        isLoading={isLoading}\r\n        list={content} \r\n        totalPages={totalPages}\r\n        onChangePage={onChangePage}\r\n      />\r\n    </Layout>\r\n  )\r\n\r\n}\r\n\r\nexport default StockContainer;\r\n","import React from 'react';\r\nimport StockContainer from '../containers/stock';\r\n\r\nconst Stock = () => (\r\n  <StockContainer />\r\n);\r\n\r\nexport default Stock;\r\n","import axios from 'axios';\r\nimport { API_URL } from '../constants/api.constants';\r\n\r\nexport const getNews = (page) => {\r\n  return axios.get(`${API_URL}posts?page=${page}`)\r\n}\r\n\r\nexport const getNewsPostComments = (id) => {\r\n  return axios.get(`${API_URL}posts/${id}/comments`)\r\n}\r\n\r\nexport const getNewsPost = (id) => {\r\n  return axios.get(`${API_URL}posts/${id}`)\r\n}\r\n\r\nexport const addNewsPost = (data) => {\r\n  return axios.post(`${API_URL}posts`, data)\r\n}\r\n\r\nexport const likeNews = (id) => {\r\n  return axios.put(`${API_URL}posts/${id}/like`)\r\n}\r\n\r\nexport const likeNewsComment = (id) => {\r\n  return axios.put(`${API_URL}posts/comments/${id}/like`)\r\n}\r\n\r\nexport const addNewsPostComment = (id, data) => {\r\n  return axios.post(`${API_URL}posts/${id}/comments`, data)\r\n}\r\n","import { getNews, likeNews, likeNewsComment, getNewsPost, addNewsPost, getNewsPostComments, addNewsPostComment } from '../services/news';\r\nimport {\r\n  SET_NEWS,\r\n  SET_NEWS_POST,\r\n  SET_NEWS_POST_COMMENTS,\r\n  CLEAR_NEWS_POST,\r\n  LIKE_NEWS,\r\n  SET_NEWS_COMMENT,\r\n  LIKE_NEWS_POST,\r\n  CLEAR_NEWS,\r\n  ADD_NEWS_POST\r\n} from '../constants/actions.constants';\r\n\r\nexport const setNews = (page) => {\r\n  return async (dispatch) => {\r\n    const news = await getNews(page);\r\n    dispatch({\r\n      type: SET_NEWS,\r\n      payload: news?.data\r\n    })\r\n  }\r\n}\r\n\r\nexport const setNewsPost = (id) => {\r\n  return async (dispatch) => {\r\n    const post = await getNewsPost(id);\r\n    dispatch({\r\n      type: SET_NEWS_POST,\r\n      payload: post?.data\r\n    })\r\n  }\r\n}\r\n\r\nexport const addNewPost = (data) => {\r\n  return async (dispatch) => {\r\n    const newPost = await addNewsPost(data);\r\n    dispatch({\r\n      type: ADD_NEWS_POST,\r\n      payload: newPost?.data\r\n    })\r\n  }\r\n}\r\n\r\nexport const setNewsPostComments = (id) => {\r\n  return async (dispatch) => {\r\n    const comments = await getNewsPostComments(id);\r\n    dispatch({\r\n      type: SET_NEWS_POST_COMMENTS,\r\n      payload: comments?.data\r\n    })\r\n  }\r\n}\r\n\r\nexport const clearNewsPost = () => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: CLEAR_NEWS_POST,\r\n      payload: {}\r\n    })\r\n  }\r\n}\r\n\r\nexport const toggleLikeNews = (id) => {\r\n  return async (dispatch, getState) => {\r\n    const likes = await likeNews(id);\r\n    const newsList = getState().news.content;\r\n\r\n    const newNewsState = newsList.map(item => {\r\n      if (item.id === id) {\r\n        return {...item, ...likes.data}\r\n      }\r\n      return item;\r\n    });\r\n\r\n    dispatch({\r\n      type: LIKE_NEWS,\r\n      payload: newNewsState\r\n    })\r\n  }\r\n}\r\n\r\nexport const toggleLikeNewsComment = (id) => {\r\n  return async (dispatch, getState) => {\r\n    const likes = await likeNewsComment(id);\r\n    const commentsList = getState().news.comments.content;\r\n\r\n    const newCommentsState = commentsList.map(item => {\r\n      if (item.id === id) {\r\n        return {...item, ...likes.data}\r\n      }\r\n      return item;\r\n    });\r\n    \r\n    dispatch({\r\n      type: SET_NEWS_COMMENT,\r\n      payload: newCommentsState\r\n    })\r\n  }\r\n}\r\n\r\nexport const setNewsPostComment = (id, data) => {\r\n  return async (dispatch, getState) => {\r\n    const comment = await addNewsPostComment(id, data);\r\n    const commentsList = getState().news.comments.content;\r\n\r\n    const newCommentsState = [...commentsList, comment.data];\r\n    \r\n    dispatch({\r\n      type: SET_NEWS_COMMENT,\r\n      payload: newCommentsState\r\n    })\r\n  }\r\n}\r\n\r\nexport const toggleLikePostNews = (id) => {\r\n  return async (dispatch, getState) => {\r\n    const likes = await likeNews(id);\r\n    const newsPost = getState().news.post;\r\n\r\n    dispatch({\r\n      type: LIKE_NEWS_POST,\r\n      payload: {...newsPost, ...likes.data}\r\n    })\r\n  }\r\n}\r\n\r\nexport const clearNews = () => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: CLEAR_NEWS,\r\n      payload: {}\r\n    })\r\n  }\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Layout from '../layout';\r\nimport Feed from '../feed';\r\nimport { setNews, clearNews, toggleLikeNews, addNewPost } from '../../actions/news-actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { ERRORS } from '../../constants/error.constants';\r\nimport { POST_MODAL } from '../../constants/modal.constants';\r\nimport { openModal } from '../../actions/modals-actions';\r\nimport AddButton from '../../components/add-btn';\r\n\r\nconst NewsContainer = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const {content, totalPages, currentPage} = useSelector(state => state.news);\r\n\r\n  useEffect(() => {\r\n    dispatch(setNews(0));\r\n    return () => dispatch(clearNews());\r\n  }, []);\r\n\r\n  const onChangePage = async (page) => {\r\n    try {\r\n      setIsLoading(true);\r\n      await dispatch(setNews(page));\r\n    } catch(e) {\r\n      toast.error(ERRORS[e?.response?.data?.message])\r\n    } finally {\r\n      setIsLoading(false);\r\n    } \r\n  }\r\n\r\n  const NewsLikeHandler = async (id) => {\r\n    try {\r\n      await dispatch(toggleLikeNews(id));\r\n    } catch(e) {\r\n      toast.error(ERRORS[e?.response?.data?.message])\r\n    }\r\n  }\r\n\r\n  const openPostModal = () => {\r\n    dispatch(openModal(POST_MODAL, {\r\n      addPost: (data) => dispatch(addNewPost(data)),\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <AddButton onClick={openPostModal} />\r\n      <Feed \r\n        onLike={NewsLikeHandler}\r\n        isLoading={isLoading}\r\n        list={content}\r\n        totalPages={totalPages}\r\n        currentPage={currentPage}\r\n        onChangePage={onChangePage}\r\n      />\r\n    </Layout>\r\n  )\r\n\r\n}\r\n\r\nexport default NewsContainer;\r\n","import React from 'react';\r\nimport NewsContainer from '../containers/news';\r\n\r\nconst News = () => (\r\n  <NewsContainer />\r\n);\r\n\r\nexport default News;\r\n","import React from 'react';\r\nimport UserPreview from '../../../components/user-preview';\r\nimport { FaHeart } from 'react-icons/fa';\r\nimport cn from 'classnames';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport s from './item.module.scss';\r\n\r\nconst CommentsItem = ({\r\n  info: {\r\n    id,\r\n    text,\r\n    userId,\r\n    userName,\r\n    userAvatarUrl,\r\n    createdAt,\r\n    likesCount,\r\n    liked,\r\n  },\r\n  className,\r\n  onLike\r\n}) => {\r\n\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className={cn(s.container, className)}>\r\n      <div className={s.header}>\r\n        <UserPreview \r\n          name={userName}\r\n          avatar={userAvatarUrl}\r\n          date={createdAt}\r\n          localClassName=\"post\"\r\n          onClick={() => history.push(`/profile/${userId}`)}\r\n        />\r\n        <div className={s.likes}>\r\n          <button\r\n            onClick={() => onLike(id)}\r\n          >\r\n            <FaHeart \r\n              className={cn(s.likeIcon, {[s.active]: liked})}\r\n            />\r\n          </button>\r\n          {likesCount}\r\n        </div>\r\n      </div>\r\n      <p>\r\n        {text}\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CommentsItem;\r\n","import React from 'react';\r\nimport CommentItem from './item';\r\nimport { useDispatch } from 'react-redux';\r\nimport { openModal } from '../../actions/modals-actions';\r\nimport { COMMENT_MODAL } from '../../constants/modal.constants';\r\n\r\nimport s from './comments.module.scss';\r\n\r\nconst Comments = ({list, onLike, addComment}) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const openCommentModal = () => {\r\n    dispatch(openModal(COMMENT_MODAL, {\r\n      addComment: (data) => addComment(data),\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <div className={s.header}>\r\n        <span>Комментарии ({list?.length})</span>\r\n        <button\r\n          onClick={() => openCommentModal()}\r\n          className={s.add}\r\n        >\r\n          Добавить комментарий\r\n        </button>\r\n      </div>\r\n      {list?.map(item => (\r\n        <CommentItem \r\n          info={item}\r\n          onLike={onLike}\r\n          key={item.id}\r\n        />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Comments;\r\n","import React, { useEffect } from 'react';\r\nimport Layout from '../../layout';\r\nimport { \r\n  setNewsPost, \r\n  clearNewsPost, \r\n  toggleLikePostNews, \r\n  toggleLikeNewsComment, \r\n  setNewsPostComments, \r\n  setNewsPostComment \r\n} from '../../../actions/news-actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport FeedItem from '../../feed/item';\r\nimport { toast } from 'react-toastify';\r\nimport { ERRORS } from '../../../constants/error.constants';\r\nimport Comments from '../../comments';\r\n\r\nimport s from './post.module.scss';\r\n\r\nconst PostContainer = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const post = useSelector(state => state.news.post);\r\n  const { content: comments } = useSelector(state => state.news.comments);\r\n\r\n  const { id } = useParams();\r\n\r\n  const addComment = (data) => {\r\n    dispatch(setNewsPostComment(id, data));\r\n  }\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await Promise.all([\r\n        dispatch(setNewsPost(id)),\r\n        dispatch(setNewsPostComments(id))\r\n      ]);\r\n    })()\r\n    return () => dispatch(clearNewsPost());\r\n  }, []);\r\n\r\n  const NewsPostLikeHandler = async (id) => {\r\n    try {\r\n      await dispatch(toggleLikePostNews(id));\r\n    } catch(e) {\r\n      toast.error(ERRORS[e?.response?.data?.message])\r\n    }\r\n  }\r\n\r\n  const CommentLikeHandler = async (id) => {\r\n    try {\r\n      await dispatch(toggleLikeNewsComment(id));\r\n    } catch(e) {\r\n      toast.error(ERRORS[e?.response?.data?.message])\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <div className={s.wrap}>\r\n        <FeedItem\r\n          isPost\r\n          info={post}\r\n          onLike={(id) => NewsPostLikeHandler(id)}\r\n          className={s.post}\r\n        />\r\n        <Comments \r\n          onLike={CommentLikeHandler}\r\n          list={comments}\r\n          addComment={addComment}\r\n        />\r\n      </div>\r\n    </Layout>\r\n  )\r\n\r\n}\r\n\r\nexport default PostContainer;\r\n","import React from 'react';\r\nimport NewsPostContainer from '../containers/news/post';\r\n\r\nconst NewsPost = () => (\r\n  <NewsPostContainer />\r\n)\r\n\r\nexport default NewsPost;\r\n","import React, { useEffect } from 'react';\r\nimport Layout from '../../layout';\r\nimport { \r\n  setEventsPost, \r\n  clearEventsPost, \r\n  toggleLikePostEvent, \r\n  toggleLikeEventsComment, \r\n  setEventsPostComments, \r\n  setEventsPostComment \r\n} from '../../../actions/events-actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport FeedItem from '../../feed/item';\r\nimport { toast } from 'react-toastify';\r\nimport { ERRORS } from '../../../constants/error.constants';\r\nimport Comments from '../../comments';\r\n\r\nimport s from './post.module.scss';\r\n\r\nconst PostContainer = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const post = useSelector(state => state.events.post);\r\n  const { content: comments } = useSelector(state => state.events.comments);\r\n\r\n  const { id } = useParams();\r\n\r\n  const addComment = (data) => {\r\n    dispatch(setEventsPostComment(id, data));\r\n  }\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await Promise.all([\r\n        dispatch(setEventsPost(id)),\r\n        dispatch(setEventsPostComments(id))\r\n      ]);\r\n    })()\r\n    return () => dispatch(clearEventsPost());\r\n  }, []);\r\n\r\n  const EventsPostLikeHandler = async (id) => {\r\n    try {\r\n      await dispatch(toggleLikePostEvent(id));\r\n    } catch(e) {\r\n      toast.error(ERRORS[e?.response?.data?.message])\r\n    }\r\n  }\r\n\r\n  const CommentLikeHandler = async (id) => {\r\n    try {\r\n      await dispatch(toggleLikeEventsComment(id));\r\n    } catch(e) {\r\n      toast.error(ERRORS[e?.response?.data?.message])\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <div className={s.wrap}>\r\n        <FeedItem\r\n          isPost\r\n          info={post}\r\n          onLike={(id) => EventsPostLikeHandler(id)}\r\n          className={s.post}\r\n        />\r\n        <Comments \r\n          onLike={CommentLikeHandler}\r\n          list={comments}\r\n          addComment={addComment}\r\n        />\r\n      </div>\r\n    </Layout>\r\n  )\r\n\r\n}\r\n\r\nexport default PostContainer;\r\n","import React from 'react';\r\nimport EventsPostContainer from '../containers/events/post';\r\n\r\nconst EventsPost = () => (\r\n  <EventsPostContainer />\r\n)\r\n\r\nexport default EventsPost;\r\n","import React, { useEffect } from 'react';\r\nimport FeedItem from '../feed/item';\r\nimport { \r\n  setStockPost, \r\n  clearStockPost\r\n} from '../../../actions/stock-actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport Layout from '../../layout';\r\n\r\nimport s from './post.module.scss';\r\n\r\nconst PostContainer = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const post = useSelector(state => state.stock.post);\r\n\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    dispatch(setStockPost(id));\r\n    return () => dispatch(clearStockPost());\r\n  }, []);\r\n\r\n  return (\r\n    <Layout> \r\n      <FeedItem\r\n        className={s.item} \r\n        info={post}\r\n        isPost\r\n      />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default PostContainer;\r\n","import React from 'react';\r\nimport StockPostContainer from '../containers/stock/post';\r\n\r\nconst StockPost = () => (\r\n  <StockPostContainer />\r\n)\r\n\r\nexport default StockPost;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport { setUser, clearUser } from '../../actions/user-actions';\r\nimport moment from 'moment';\r\nimport Layout from '../layout';\r\n\r\nimport s from './profile.module.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProfileContainer = () => {\r\n\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const me = useSelector(state => state.user.me);\r\n  const { \r\n    displayName, \r\n    profilePictureUrl,\r\n    country,\r\n    city,\r\n    description,\r\n    birthday,\r\n    phone,\r\n    team \r\n  } = useSelector(state => state.user.profile);\r\n  \r\n  useEffect(() => {\r\n    if(me.id == id) {\r\n      history.push('/me')\r\n      return;\r\n    }\r\n    (async () => {\r\n      await dispatch(setUser(id));\r\n    })()\r\n\r\n    return () => dispatch(clearUser());\r\n  }, [me]);\r\n\r\n  return (\r\n    <Layout>\r\n      <div className={s.container}>\r\n        {profilePictureUrl && <img className={s.img} src={profilePictureUrl} alt=\"avatar\" />}\r\n        <span className={s.name}>{displayName}</span>\r\n        {/* <div className={s.item}>\r\n          <span className={s.subtitle}>Дата рождения</span>\r\n          {moment(birthday).format('DD.MM.yyyy')}\r\n        </div> */}\r\n        {country && <div className={s.item}>\r\n          <span className={s.subtitle}>Страна</span>\r\n          {country}\r\n        </div>}\r\n        {city && <div className={s.item}>\r\n          <span className={s.subtitle}>Город</span>\r\n          {city}\r\n        </div>}\r\n        {team && <div className={s.item}>\r\n          <span className={s.subtitle}>Команда</span>\r\n          {team}\r\n        </div>}\r\n        {/* <div className={s.item}>\r\n          <span className={s.subtitle}>Телефон</span>\r\n          {phone}\r\n        </div> */}\r\n        {description && <div className={s.description}>\r\n          О себе:\r\n          <p className={s.text}>{description}</p>\r\n        </div>}\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default ProfileContainer;\r\n","import React from 'react';\r\nimport ProfileContainer from '../containers/profile';\r\n\r\nconst Profile = () => (\r\n  <ProfileContainer />\r\n)\r\n\r\nexport default Profile;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Layout from '../layout';\r\nimport { useForm, Controller  } from 'react-hook-form';\r\nimport Datepicker, { registerLocale } from 'react-datepicker';\r\nimport ru from 'date-fns/locale/ru';\r\nimport Input from '../../components/input';\r\nimport Button from '../../components/button';\r\nimport { updateAvatar, updateMe, removeAvatar } from '../../actions/user-actions';\r\nimport { openModal } from '../../actions/modals-actions';\r\nimport { toast } from 'react-toastify';\r\nimport { ERRORS } from '../../constants/error.constants';\r\nimport { CHANGE_PASS_MODAL } from '../../constants/modal.constants';\r\nimport { changePass } from '../../services/auth';\r\nimport { useHistory } from 'react-router';\r\nimport moment from 'moment';\r\nimport InputMask from 'react-input-mask';\r\n\r\nimport s from './me.module.scss';\r\nregisterLocale('ru', ru);\r\n\r\nconst MeContainer = () => {\r\n\r\n  const history = useHistory();\r\n  const [isEdit, setIsEdit] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const { \r\n    birthday, \r\n    city, \r\n    country, \r\n    displayName,\r\n    profilePictureUrl,\r\n    team,\r\n    phone,\r\n    description\r\n  } = useSelector(state => state.user.me);\r\n\r\n  const { handleSubmit, setValue, reset, control } = useForm({\r\n    defaultValues: {\r\n      birthday,\r\n      city,\r\n      country,\r\n      displayName,\r\n      team,\r\n      phone,\r\n      description\r\n    }\r\n  });\r\n\r\n  const avatarChange = async (val) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", val[0]);\r\n    try {\r\n      await dispatch(updateAvatar(formData));\r\n      toast.success('Аватар обновлен');\r\n    } catch (e) {\r\n      toast.error(ERRORS[e?.response?.data?.message]);\r\n    }\r\n  }\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      await dispatch(updateMe({\r\n        ...data,\r\n        birthday: data.birthday,\r\n      }));\r\n      toast.success('Данные обновлены');\r\n      setIsEdit(false);\r\n    } catch (e) {\r\n      toast.error(ERRORS[e?.response?.data?.message] || 'Ошибка');\r\n    }\r\n  }\r\n\r\n  const openChangeModal = () => {\r\n    dispatch(openModal(CHANGE_PASS_MODAL, {\r\n      changePass: (data) => changePass(data)\r\n    }))\r\n  }\r\n\r\n  const rmAvatar = async () => {\r\n    try {\r\n      await dispatch(removeAvatar());\r\n      toast.success('Аватар успешно удален');\r\n    } catch (e) {\r\n      toast.error(ERRORS[e?.response?.data?.message] || 'Ошибка');\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    reset({\r\n      birthday, \r\n      city, \r\n      country, \r\n      displayName,\r\n      team,\r\n      phone,\r\n      description\r\n    })\r\n  }, [birthday])\r\n\r\n  return (\r\n    <Layout>\r\n      <div className={s.container}>\r\n        <div className={s.avatar}>\r\n          {profilePictureUrl ? \r\n            <>\r\n              <img className={s.img} src={profilePictureUrl} alt=\"avatar\" />\r\n              <button\r\n                type=\"button\" \r\n                onClick={() => rmAvatar()}\r\n                className={s.remove}>\r\n                x\r\n              </button>\r\n            </> :\r\n            <div className={s.preview}>\r\n              {displayName?.[0]}\r\n            </div>\r\n          }\r\n          <div className={s.add}>\r\n            <span>+</span>\r\n            <input\r\n              className={s.file} \r\n              type='file' \r\n              onChange={(e) => avatarChange(e.target.files)} \r\n              accept=\"image/jpeg, image/png\"\r\n            />\r\n          </div>\r\n        </div>\r\n        {\r\n          isEdit ? \r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n              <span className={s.note}>Дата рождения</span>\r\n              <Controller\r\n                control={control}\r\n                name=\"birthday\"\r\n                render={({\r\n                  field: { value },\r\n                }) => (\r\n                  <Datepicker \r\n                    selected={value ? new Date(value) : null} \r\n                    onChange={(val) => setValue('birthday', val)} \r\n                    className={s.datepicker}\r\n                    wrapperClassName={s.datecontainer}\r\n                    dateFormat=\"dd/MM/yyyy\"\r\n                    placeholderText=\"Выберите дату рождения\"\r\n                    showYearDropdown\r\n                    dropdownMode=\"select\"\r\n                    locale=\"ru\"\r\n                  />\r\n                )} \r\n              />\r\n              <Controller\r\n                control={control}\r\n                name=\"displayName\"\r\n                render={({\r\n                  field: { value },\r\n                }) => (\r\n                  <Input\r\n                    label=\"Отображаемое имя *\"\r\n                    className={s.input}\r\n                    value={value}\r\n                    onChange={(val) => setValue('displayName', val)}\r\n                  />\r\n                )}\r\n              />\r\n              <Controller\r\n                control={control}\r\n                name=\"country\"\r\n                render={({\r\n                  field: { value },\r\n                }) => (\r\n                  <Input\r\n                    disabled\r\n                    label=\"Страна\"\r\n                    className={s.input}\r\n                    value={'Беларусь'}\r\n                    onChange={(val) => setValue('country', val)}\r\n                  />\r\n                )}\r\n              />\r\n              <Controller\r\n                control={control}\r\n                name=\"city\"\r\n                render={({\r\n                  field: { value },\r\n                }) => (\r\n                  <Input\r\n                    label=\"Город\"\r\n                    className={s.input}\r\n                    value={value}\r\n                    onChange={(val) => setValue('city', val)}\r\n                  />\r\n                )}\r\n              />\r\n              <Controller\r\n                control={control}\r\n                name=\"team\"\r\n                render={({\r\n                  field: { value }\r\n                }) => (\r\n                  <Input\r\n                    label=\"Команда\"\r\n                    className={s.input}\r\n                    value={value}\r\n                    onChange={(val) => setValue('team', val)}\r\n                  />\r\n                )}\r\n              />\r\n              <Controller\r\n                control={control}\r\n                name=\"phone\"\r\n                render={({\r\n                  field: { value }\r\n                }) => (\r\n                  <InputMask \r\n                    mask=\"+375 999999999\"\r\n                    value={value}\r\n                    onChange={(value) => setValue('phone', value)}\r\n                  >\r\n                    {(inputProps) => <Input \r\n                      className={s.input}\r\n                      label='Телефон'\r\n                      value={inputProps.value}\r\n                      onChange={inputProps.onChange}\r\n                    />}\r\n                  </InputMask>\r\n                )}\r\n              />\r\n              <span className={s.note}>О себе</span>\r\n              <Controller\r\n                control={control}\r\n                name=\"description\"\r\n                render={({\r\n                  field: { value }\r\n                }) => (\r\n                  <textarea\r\n                    value={value}\r\n                    className={s.textarea}\r\n                    placeholder=\"O ceбе\" \r\n                    onChange={(e) => setValue('description', e.target.value)}\r\n                  />\r\n                )}\r\n              />\r\n              <Button\r\n                type=\"submit\" \r\n                text=\"Сохранить\" \r\n              />\r\n            </form>\r\n        : <div>\r\n            <span className={s.name}>{displayName}</span>\r\n            <div className={s.item}>\r\n              <span className={s.subtitle}>Дата рождения</span>\r\n              {moment(birthday).format('DD.MM.yyyy')}\r\n            </div>\r\n            {country && <div className={s.item}>\r\n              <span className={s.subtitle}>Страна</span>\r\n              {country}\r\n            </div>}\r\n            {city && <div className={s.item}>\r\n              <span className={s.subtitle}>Город</span>\r\n              {city}\r\n            </div>}\r\n            {team && <div className={s.item}>\r\n              <span className={s.subtitle}>Команда</span>\r\n              {team}\r\n            </div>}\r\n            <div className={s.item}>\r\n              <span className={s.subtitle}>Телефон</span>\r\n              {phone}\r\n            </div>\r\n            {description && <div className={s.description}>\r\n              О себе:\r\n              <p className={s.text}>{description}</p>\r\n            </div>}\r\n          </div>\r\n        }\r\n        {!isEdit && <Button\r\n          type=\"button\" \r\n          text=\"Редактировать\"\r\n          onClick={() => setIsEdit(!isEdit)} \r\n        />}\r\n        <Button \r\n          styleType=\"red\"\r\n          text=\"Изменить пароль\"\r\n          className={s.change}\r\n          onClick={openChangeModal}\r\n        />\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default MeContainer;\r\n","import React from 'react';\r\nimport MeContainer from '../containers/me';\r\n\r\nconst Me = () => (\r\n  <MeContainer />\r\n)\r\n\r\nexport default Me;\r\n","import React from 'react';\r\nimport Layout from '../layout';\r\n\r\nimport s from './static.module.scss';\r\n\r\nconst StaticContainer = ({children}) => {\r\n\r\n    return (\r\n        <Layout>\r\n            <div className={s.container}>\r\n                {children}\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default StaticContainer;","import React from 'react';\r\nimport StaticContainer from '../../containers/static';\r\n\r\nconst Policy = () => (\r\n    <StaticContainer>\r\n        <>\r\n            <h1>Политика конфиденциальности</h1>\r\n            <p>Администрация ресурса Squadix уважает ваше право на конфиденциальность.</p>\r\n\r\n            <p>Настоящая политика информирует пользователей ресурса Squadix о правилах конфиденциальности, применяемых на ресурсе Squadix в отношении ваших личных данных, основана на нормах законодательства Республики Беларусь, международного законодательства в области защиты личных данных. Эти принципы и нормы применяются к обработке ваших личных данных при пользовании ресурсом Squadix и его посещении для защиты вашей частной жизни.</p>\r\n\r\n            <p>Пользуясь ресурсом Squadix, вы доверяете нам ваши личные данные. Доверие наших пользователей имеет для нас первостепенное значение, и поэтому Squadix стремится защищать ваше право на конфиденциальность. Политика конфиденциальности объясняет, как мы собираем и используем ваши личные данные и каким образом мы защищаем ваше право на конфиденциальность.</p>\r\n\r\n            <p>Если вы не принимаете условия нашей политики конфиденциальности, мы просим вас воздержаться от размещения объявлений, посещения, а также от пользования прочими сервисами ресурса Squadix.</p>\r\n\r\n            <h3>1. Общие положения об обработке личных данных пользователей</h3>\r\n            <p>Мы обрабатываем личные данные пользователей с целью реализации нашего <a href=\"/terms\">Пользовательского соглашения</a> и <a href=\"/rules\">Правил размещения объявлений</a>, а также для улучшения и совершенствования наших сервисов. Мы также занимаемся обработкой личных данных для того, чтобы предоставить вам информацию маркетингового характера, а также прочий персонализированный контент с учетом ваших предпочтений; для понимания тенденций в нашем сегменте рынка и для пресечения попыток злоупотребления нашими сервисами. Ваши личные данные могут быть переданы нашим партнерам для использования ими в целях, установленных настоящей Политикой конфиденциальности.</p>\r\n\r\n            <p>Личные данные, собираемые нами в указанных выше целях, включают в себя:</p>\r\n\r\n            <ul>\r\n                <li>данные, которые пользователи самостоятельно указывают на ресурсе Squadix (имя, электронный адрес, номер телефона и т.д.)</li>\r\n                <li>данные, которые автоматически собираются при пользовании нашими сервисами, например, при посещении страниц ресурса Squadix, в том числе данные о географическом местоположении пользователя, об устройствах, используемых пользователями для посещения ресурса Squadix, а также о типе используемого интернет-подключения.</li>\r\n            </ul>\r\n            <h3>2. Основные понятия и задачи политики конфиденциальности</h3>\r\n            <p><strong>2.1.</strong> Под политикой конфиденциальности понимается заявление публичного характера о том, какие данные о пользователях собираются на ресурсе Squadix, как эти данные используются, хранятся и раскрываются третьим лицам, а также о том, как частные лица, чьи данные задействованы на ресурсе Squadix, могут управлять или распоряжаться такой информацией (например, изменять свои личные данные; отказывается или соглашаться на получение рассылок от ресурса Squadix).</p>\r\n\r\n            <p><strong>2.2.</strong> Политика конфиденциальности призвана обеспечить и гарантировать информирование всех пользователей и посетителей ресурса Squadix о том, какие данные о пользователях и посетителях собираются ресурсом Squadix, каким образом это происходит и в каких целях.</p>\r\n            <p><strong>2.3.</strong> Политика конфиденциальности является неотъемлемой частью <a href=\"/terms\">Пользовательского соглашения</a> и <a href=\"/rules\">Правил размещения объявлений</a> на ресурсе Squadix, в которых дается отсылка к непосредственному тексту Политики конфиденциальности, применяемой в отношении пользователей и посетителей ресурса Squadix.</p>\r\n            <p><strong>2.4.</strong> Под личными данными понимаются:</p>\r\n            <p><strong>2.4.1.</strong> любые данные, позволяющие напрямую идентифицировать личность пользователя (например, имя пользователя, электронный адрес, номер телефона и т.п.);</p>\r\n            <p><strong>2.4.2.</strong> любые данные, на основании которых возможно идентифицировать личность пользователя, отдельно или в комбинации с другой доступной информацией (например, дата рождения и адрес);</p>\r\n            <p><strong>2.4.3.</strong> любые другие дополнительные данные, которые связаны с данными из <em>пп. 2.4.1 и 2.4.2</em> (например, поведение и события, заказы, информационные сессии и т.п.).</p>\r\n            <p><strong>2.5.</strong> Обработка личных данных - любое использование личных данных, например, их сбор, регистрация, сопоставление, хранение и передача, или комбинация любых из этих действий. Вся обработка личных данных осуществляется на основании Конституции Республики Беларусь, Закона Республики Беларусь от 10 ноября 2008 г. № 455-3 “Об информации, информатизации и защите информации”, а также иных актов законодательства Республики Беларусь, а также международных актов, применяемых в отношении обработки и защиты личных данных.</p>\r\n            <p><strong>2.6.</strong> Ответственным за сбор, хранение, обработку и распространение личных данных пользователей ресурса Squadix является администрация ресурса. По всем вопросам вы можете обратиться на электронный адрес: <a href=\"mailto:strike.app.service@gmail.com\">strike.app.service@gmail.com</a>.</p>\r\n            <h3>3. Принципы сбора и обработки личных данных пользователей</h3><p>Мы стремимся защитить вашу частную жизнь и право на конфиденциальность при обработке личных данных, вне зависимости от способов или методов сбора таких данных, с учетом следующих стандартов их обработки:</p>\r\n            <p><strong>3.1.</strong> Честная и законная обработка ваших данных. Ваши личные данные будут обрабатываться в случае, если вы дали на это согласие или обработка ваших данных допускается законодательством Республики Беларусь.</p>\r\n            <p><strong>3.2.</strong> Явное указание цели обработки ваших личных данных. Личные данные должны собираться и обрабатываться только в четко обозначенных и законных целях и не могут быть обработаны с нарушением этого принципа.</p>\r\n            <p><strong>3.3.</strong> Соответствие собираемых и обрабатываемых данных указанным целям. Сбор, обработка и использование ваших личных данных должны быть адекватными и соответствующими целям. Мы стремимся собрать минимальный объем информации, который необходим для осуществления поставленной задачи.</p>\r\n            <p><strong>3.4.</strong> Ограниченность сроков хранения личных данных. Хранение личных данных пользователей осуществляется в течение определенных сроков. Если использование хранящихся данных перестает быть необходимым, мы предпримем меры по уничтожению или прекращению обработки ваших личных данных в разумные сроки, принимая во внимание функциональные и законодательные требования, касающиеся хранения и конфиденциальности личных данных.</p>\r\n            <p><strong>3.5.</strong> Качество и целостность. Личные данные должны быть точными, достоверными, полными и актуальными для достижения целей их обработки. В случае необходимости мы будем предпринимать меры по изменению или удалению некорректных или неполных данных.</p>\r\n            <p><strong>3.6.</strong> Прозрачность и информирование о целях сбора личных данных. Мы открыто сообщаем о факте сбора ваших личных данных, целях сбора и обработки личных данных, круге лиц, чья информация собирается, использовании файлов cookie, наименовании и местонахождении организации, ответственной за обработку данных и т.п.</p>\r\n            <p><strong>3.7.</strong> Согласие на обработку личных данных и право выбора. В случае обработки ваших данных мы просим ваше согласие, если иное не предусмотрено законодательством Республики Беларусь. В случае, если вы не согласны со сбором и обработкой ваших личных данных, то просим вас воздержаться от пользования ресурсом Squadix.</p>\r\n            <p><strong>3.8.</strong> Безопасность личных данных. Личные данные должны быть защищены надлежащим образом от возможности неправомерного доступа, потери, использования, изменения и раскрытия.</p>\r\n            <h3>4. Какие личные данные о наших пользователях мы собираем и обрабатываем?</h3><p>Мы собираем информацию о пользователях, предоставляемую ими при регистрации профиля, подаче объявления, а также при пользовании нашими сервисами (например, информация о посещенных страницах; о способе использования сервисов; техническая информация). Мы собираем следующие виды данных о вас:</p>\r\n            <h4>4.1. Данные, самостоятельно вносимые пользователями</h4><p>При регистрации профиля, размещении объявления, а также в иных случаях вы оставляете данные, которые впоследствии сохраняются. Эти данные хранятся в нашей базе данных, чтобы мы смогли предоставить вам запрашиваемую вами услугу, совершенствовать наши сервисы, пресечь неправомерное использование наших сервисов, а также предотвратить и отследить возможные правонарушения и преступления. Мы также храним информацию, предоставляемую вами при обращении в нашу службу поддержки или иные службы ресурса, чтобы иметь возможность связаться с вами и предоставить вам ответ на ваше обращение. Мы храним все замечания и предложения, направляемые вами в наш адрес, так как они помогают нам в совершенствовании наших сервисов.</p>\r\n            <h4>4.2. Данные, автоматически собираемые при использовании наших сервисов</h4><p>При использовании наших сервисов мы регистрируем данные о видах используемых сервисов, о способе их использования, а также о посещаемых страницах. Эти данные можно разделить на следующие виды:</p>\r\n            <h4>4.2.1. Данные технического характера об устройстве и интернет-подключении</h4><p>С помощью логов сервера и других инструментов мы регистрируем данные о техническом устройстве, которым вы пользуетесь, и каким образом это устройство подключается к нашим сервисам, включая данные об операционной системе, версии браузера, IP-адресах, файлах cookie и уникальных идентификационных файлах. Обычно эти данные используются для получения анонимной (обезличенной) и совокупной статистики, но она также может быть связана с вашей учетной записью (профилем). Эта информация дает нам возможность анализировать, как вы пользуетесь нашими сервисами, и подстраивать их под ваше устройство в целях облегчения и удобства вашего пользования ресурсом Squadix.</p>\r\n            <h4>4.2.2. Данные о пользовании нашими сервисами</h4><p>Когда вы входите в или выходите из вашего профиля, ищете товары или услуги на Squadix, размещаете объявление, связываетесь с продавцом или пользуетесь нашим ресурсом иным образом, информация об этом автоматически регистрируется в логах сервера. Мы используем эту информацию для того, чтобы препятствовать злоупотреблениям в отношении наших сервисов, правонарушениям и преступлениям, совершенствовать наши сервисы, обеспечивать отображение персонализированного и релевантного контента (например, показ объявлений в вашем регионе и отображение объявлений, соответствующих вашим недавним запросам).</p>\r\n            <h4>4.2.3. Данные о местоположении</h4><p>Когда вы пользуетесь нашими сервисами, мы фиксируем ваше примерное географическое местоположение, основанное на вашем IP-адресе. Если вы пользуетесь нашими мобильными приложениями, мы можем собирать более точные данные о вашем местоположении. Эта информация используется, например, для статистических исследований, а также для того, чтобы отображать актуальные для вас объявления, рекламу или другой персонализированный контент.</p>\r\n            <h4>4.2.4. Файлы cookie и прочий локально хранящийся контент</h4><p>Когда вы пользуетесь Squadix, мы используем различные инструменты, чтобы распознать вас как нашего пользователя и упростить ваше пользование ресурсом Squadix. Файл cookie - это небольшой файл данных (фрагмент текста), который передается в ваш браузер от Squadix. Такие файлы содержат информацию, которую мы впоследствии можем прочитать и упростить для вас использование нашего ресурса и сервисов. Файлы cookie никогда не используются для запуска программ или для заражения вашего устройства вирусами. Мы используем файлы cookie, например, для того, чтобы вам не нужно было каждый раз заново вводить данные для входа в профиль. Squadix также отправляет вам файлы cookie, например, когда вы перемещаетесь по нашему ресурсу, осуществляете поиск или вносите ваши данные при регистрации и т.д. Файлы cookie позволяют сэкономить ваше время, поскольку они позволяют сохранять, а не вводить многократно одну и ту же информацию. Мы можем локально хранить анонимные идентификационные файлы на вашем устройстве. Это касается в первую очередь мобильных устройств, которые не поддерживают использование файлов cookie. Мы используем следующие виды файлов cookie: аналитические, социальных сетей, партнеров, cookies рекламы и поведения, технические и рабочие. Пользуясь нашими сервисами, вы выражаете ваше согласие на использование нами файлов cookie, если в настройках вашего браузера вы не деактивировали использование файлов cookie. Принимая файлы cookie на Squadix, вы предоставляете нам доступ к информации о том, какие страницы вы просматриваете. Эта информация может быть использована для настройки персонализированного контента на Squadix, а также для статистических исследований. Информацию об изменении настроек файлов cookie можно получить в разделе справки вашего браузера. Вы можете сами решить, согласны ли вы принимать файлы cookie или нет. В случае если в вашем браузере настроено сохранение файлов cookie, то вы тем самым соглашаетесь с сохранением файлов cookie, поступающих от Squadix. В настройках вашего браузера вы можете выбрать автоматическое сохранение файлов cookie; установить опцию, чтобы ваше согласие требовалось при каждом сохранении файлов cookie; установить опцию, чтобы файлы cookie вовсе не сохранялись в вашем браузере. Как изменить эти настройки в вашем браузере - зависит от браузера, которым вы пользуетесь. Вам необходимо внести изменения в настройки всех браузеров, которые установлены на вашем устройстве, чтобы настройки в отношении файлов cookie работали корректно и единообразно. При отказе от приема файлов cookie на Squadix некоторые из наших сервисов могут отображаться некорректно. Здесь вы можете ознакомиться с информацией о том, как изменить настройки для файлов cookie в некоторых браузерах:</p>\r\n            <ul><li><span><a href=\"https://support.apple.com/ru-ru/guide/safari/sfri11471/11.0/mac/10.13\" target=\"_blank\" rel=\"noreferrer\">Safari</a></span></li><li><a href=\"https://support.google.com/chrome/answer/95647?co=GENIE.Platform%3DDesktop&amp;hl=ru\" target=\"_blank\" rel=\"noreferrer\">Google Chrome</a></li><li><a href=\"https://support.microsoft.com/ru-ru/help/17442/windows-internet-explorer-delete-manage-cookies\" target=\"_blank\" rel=\"noreferrer\">Explorer</a></li><li><a href=\"https://support.mozilla.org/ru/kb/vklyuchenie-i-otklyuchenie-kukov-ispolzuemyh-veb-s\" target=\"_blank\" rel=\"noreferrer\">Mozilla Firefox</a></li><li><a href=\" https://help.opera.com/ru/latest/security-and-privacy/\" target=\"_blank\" rel=\"noreferrer\">Opera</a></li></ul><h4>4.3. Данные из других источников</h4><p>Иногда мы можем получать данные из других источников, например, от рекламных партнеров, ресурсов и инструментов по сбору статистических данных и других третьих лиц, которые помогают нам понять вашу пользовательскую активность, ваши предпочтения и совершенствовать наши сервисы. Мы можем получать данные от наших партнеров, например, о том, что будет происходить после того, как вы нажмете на рекламный баннер на Squadix. Такая информация поможет нам оценить эффективность баннерной рекламы и сделать ее более актуальной для пользователя.</p>\r\n            <h3>5. Для каких целей используются личные данные пользователей?</h3><p><strong>Squadix </strong>обрабатывает ваши данные для того, чтобы оказывать вам услуги, улучшать и развивать наши сервисы (например, настроить их согласно вашим предпочтениям). Мы также обрабатываем личные данные, чтобы предоставить вам персонализированные рекомендации и предложения, персонализированный контент, пресечь попытки нарушений, а также в коммерческих (рекламных, маркетинговых) целях. Мы используем личные данные для аналитических целей для того, чтобы понять тенденции рынка и попытаться предсказать будущие тенденции. Ниже вы сможете более детально ознакомиться с целями, для которых мы используем ваши личные данные.</p>\r\n            <h4>5.1. Персонализированные сервисы и маркетинг</h4><p>Мы хотим рекомендовать вам контент и сервисы на основании вашего пользовательского поведения и ваших интересов. В первую очередь, мы можем дать вам рекомендации об объявлениях и сервисах, основанные на вашем поведении на ресурсе Squadix. Мы также можем порекомендовать продукты и сервисы, основываясь на предпочтениях других пользователей с похожим пользовательским поведением. Мы также можем использовать ваши личные данные, чтобы настроить баннерную рекламу и другой коммерческий контент на ресурсе Squadix согласно вашим предпочтениям. На основе такой информации мы также можем осуществлять рекламные кампании. Рекламодатели, размещающие у нас баннерную рекламу, могут получить доступ к вашим личным данным и вашим пользовательским предпочтениям для отображения актуальной для вас баннерной рекламы, однако им строго запрещено использовать эти данные в других целях, отличных от размещения баннерной рекламы на Squadix.</p>\r\n            <h4>5.2. Прямой маркетинг</h4><p>Периодически мы направляем нашим пользователям письма маркетингового характера (рассылку) по электронной почте или по другим каналам (например, в социальных сетях), если вы не отказались от получения такой рассылки. Эта рассылка может содержать информацию о специальных предложениях от третьих лиц. Если вы не являетесь нашим пользователям, то такая рассылка не будет вам направляться без вашего явного предварительного согласия. В письмах рекламного характера, которые вы получаете от нас, есть возможность отказаться от рассылки, нажав на специальную ссылку в письме.</p>\r\n            <h4>5.3. Совершенствование наших сервисов</h4><p>Мы используем ваши личные данные, чтобы предоставить вам персонализированные сервисы, соответствующие вашим потребностям и интересам, а также чтобы усовершенствовать наш интерфейс. Информация, собранная в этих целях, агрегируется и анонимизируется . Однако эту информацию мы также можем использовать не в анонимной форме при необходимости разрешения технических проблем, возникших у отдельных пользователей.</p>\r\n            <h4>5.4. Пресечение попыток злоупотребления нашими сервисами</h4><p>Мы используем техническую информацию и информацию об активности пользователей, чтобы ограничить разные виды злоупотреблений нашими сервисами и преступную активность на Squadix. Под злоупотреблением нашими сервисами понимается мошенничество, спам-рассылка, фишинг, предложения интимного характера, попытки входа в чужие учетные записи (профили), а также другие действия, которые запрещены нашими <a href=\"/rules\">Правилами размещения объявлений</a>, <a href=\"/policy\">Пользовательским соглашением</a> и законодательством Республики Беларусь.</p>\r\n            <h4>5.5. Разработка продукта и анализ тенденций в нашем сегменте</h4><p>Целью обработки личных данных пользователей также является получение статистики о тенденциях в нашем сегменте, которую мы используем для того, чтобы совершенствовать Squadix, а также расширять круг наших продуктов и сервисов. Статистика может собираться с помощью анализа, который может проводиться как самим ресурсом Squadix, так и компаниями, к услугам которых мы прибегаем для этих целей. Такие компании анализируют информацию на основе конфиденциальности и удаляют ее после выполнения поставленной задачи.</p>\r\n            <h4>5.6. Предоставление дополнительных сервисов</h4><p>В случае привлечения нами третьих лиц для предоставления пользователям ресурса Squadix отдельных сервисов (услуг), личные данные пользователей, необходимые для предоставления им таких сервисов (услуг), могут собираться с целью их передачи третьим лицам, непосредственно осуществляющим предоставление соответствующих сервисов (услуг).</p>\r\n            <h4>5.7. Централизованное хранение</h4><p>Собираемые нами личные данные могут быть сохранены и обработаны в централизованной базе данных с целью понять вашу пользовательскую активность.</p>\r\n            <h3>6. Предоставление личных данных третьим лицам</h3><p>Ваши личные данные об использовании наших сервисов могут быть переданы другим компаниям, аффилированным Squadix, для использования в тех целях, для которых эта информация была собрана, и только в целях, указанных в п. 5 настоящей Политики конфиденциальности. По возможности информация будет предоставлена в анонимной (обезличенной) форме, однако в некоторых случаях такая информация может допускать вашу идентификацию. Для того, чтобы сделать ваше объявление как можно более эффективным, мы можем передать информацию, которую вы указали в вашем объявлении, нашим партнерам или подрядчикам.</p>\r\n            <p>Также ваши данные могут быть переданы третьим лицам, например, при проведении вами платежа или при хранении информации на сервере третьих лиц, а также для организации доставки реализуемых/приобретаемых посредством Squadix товаров. Однако наши соглашения с партнерами и подрядчиками защищают ваше право на конфиденциальность и запрещают использование ими ваших данных в иных целях. В случае если есть основания полагать, что посредством Squadix было совершено правонарушение или преступление, по официальному запросу компетентных в расследовании органов и в соответствии с законодательством Республики Беларусь, ваши личные данные, данные переписки и информация по вашим объявлениям может быть передана таким органам. Кроме того, такие данные могут быть переданы соответствующим органам и по нашей инициативе в целях предотвращения планируемых правонарушений и преступлений, если у нас есть весомые основания считать, что противоправные действия могут быть совершены в отношении третьих лиц или наших сервисов.</p>\r\n            <p>Мы не будем использовать, продавать, передавать или раскрывать ваши личные данные иным способом и в иных целях, которые не указаны в настоящей Политике конфиденциальности, если мы не обязаны раскрывать ваши личные данные по решению суда или в случае если мы предварительно не получили ваше явное согласие на это. Мы можем передавать сведения личного характера о вас в случае предварительного получения вашего согласия на это. Если ваши личные данные переданы третьим лицам в связи с оказанием нам услуг в соответствии с соглашениями, то такие третьи лица будут обязаны конфиденциально обрабатывать ваши данные и не сможет использовать эту информацию в каких-либо иных целях.</p>\r\n            <p>Также ваши данные могут быть переданы третьим лицам, например, при проведении вами платежа или при хранении информации на сервере третьих лиц, а также для организации доставки реализуемых/приобретаемых посредством Squadix товаров или при проведении мероприятий по предотвращению мошенничества.</p>\r\n            <h3>7. Запрос о предоставлении, редактировании или удалении своих личных данных</h3><p>Для предоставления, редактирования или удаления ваших данных вы можете обратиться по электронному адресу: <a href=\"mailto:strike.app.service@gmail.com\">strike.app.service@gmail.com</a>. В случае обращения в письменном виде по данному адресу один раз в год мы можем бесплатно предоставить вам информацию о ваших данных, которыми Squadix обладает. Также в письменной форме в любое время вы можете попросить нас внести изменения в ваши личные данные или удалить их вовсе, если данные о вас неверны. Однако это не касается случаев, когда сохранение ваших данных необходимо в оправданных коммерческих или юридических целях. Иногда при получении вашей просьбы о предоставлении, редактировании или удалении ваших личных данных мы можем попросить вас подтвердить вашу личность. Мы готовы предоставлять, редактировать и удалять ваши личные данные при условии, что такая просьба от вас не сопряжена для нас с чрезмерными техническими сложностями, не подвергает риску конфиденциальность других пользователей и не поступает слишком многократно.</p>\r\n            <p>Вы также можете попросить нас не использовать ваши личные данные в целях прямого маркетинга. В таком случае ваши данные не будут использованы для этой цели.</p>\r\n            <h3>8. Хранение личных данных</h3><p>Ваши личные данные не будут храниться у нас дольше, чем необходимо для реализации целей, для которых они собирались (п. 5 настоящей Политики конфиденциальности). Вы также можете попросить нас удалить информацию о вас как о пользователе, за исключением тех случаев, когда хранение ваших личных данных требуется от нас по закону или для предоставления вам тех услуг, которые вы заказали. В связи с использованием так называемых облачных технологий хранения данных, использующих серверные ёмкости в разных странах для обеспечения максимальной эффективности и безопасности хранения, ваши личные данные могут располагаться за пределами Республики Беларусь.</p>\r\n            <p>Когда цели, для которых ваши личные данные были собраны, будут достигнуты либо хранение ваших личных данных не будет требоваться от нас по закону, мы предпримем меры по удалению, агрегации или обезличиванию ваших личных данных.</p>\r\n            <p>Информация, которую вы оставили о себе на Squadix, разместив у нас объявление, в любом случае будет сохранена на Squadix после удаления вами объявления в течение 5 лет с целью пресечения попыток злоупотребления нашими сервисами, предупреждения преступной деятельности и содействия в разрешении споров о предметах сделок, объявления о которых были размещены на Squadix.</p>\r\n            <h3>9. Безопасность личных данных</h3><p>Мы храним и обрабатываем ваши личные данные надежным и безопасным образом. Мы следуем нашим процедурам, принципам и мерам, которые гарантируют конфиденциальность пользователей с учетом требований законодательства. Мы постоянно совершенствуем способы сбора, хранения и обработки ваших личных данных. Мы ограничиваем нашим сотрудникам, подрядчикам и партнерам доступ к личным данным, а также накладываем на них строгие договорные обязательства, за нарушение которых предусмотрена ответственность.</p>\r\n            <h3>10. Использование аналитических инструментов и файлов cookie</h3><p>Мы постоянно работаем над совершенствованием качества обслуживания пользователей Squadix. Для достижения наилучших результатов по внедрению новых опций и сервисов мы собираем различную информацию о наших пользователях. Например, это касается информации о тех страницах, которые вы посетили, времени посещения Squadix, а также информации о вашем браузере. Мы также используем различные технические опции, чтобы идентифицировать вас как пользователя и проанализировать полученную информацию о наших пользователях. Методы (в том числе файлы cookie), которые мы применяем в этих целях, необходимы для того, чтобы наши сервисы работали должным образом, чтобы вам было проще пользоваться нашими сервисами, а также чтобы мы смогли проводить исследования, которые бы в будущем способствовали усовершенствованию наших сервисов в соответствии с потребностями пользователей Squadix.</p>\r\n            <h3>11. Изменение политики конфиденциальности</h3><p>Мы будем регулярно обновлять нашу Политику конфиденциальности, чтобы информировать вас обо всех изменениях в нашем подходе к обработке ваших личных данных. В случае принятия существенных изменений, мы будем информировать вас о них отдельно. Все остальные изменения Политики конфиденциальности отражаются на этой странице.</p>\r\n            <p>Последнее обновление политики конфиденциальности: 30 января 2021 года.</p>\r\n            <p>В случае возникновения вопросов о нашей политике конфиденциальности, пожалуйста, свяжитесь с нашей службой поддержки.</p>\r\n        </>\r\n    </StaticContainer>\r\n)\r\n\r\nexport default Policy;\r\n","import React from 'react';\r\nimport StaticContainer from '../../containers/static';\r\n\r\nconst Rules = () => (\r\n    <StaticContainer>\r\n        <>\r\n            <p>На Squadix вы можете разместить частный или коммерческий тип объявлений.</p>\r\n            <h3>Частное объявление</h3>\r\n            <p>Частные объявления – это объявления, поданные от имени физического лица, не связанные с осуществлением этим лицом\r\n            предпринимательской деятельности. К частным не могут быть отнесены объявления, поданные от имени физических лиц, не\r\n            имеющих соответствующей государственной регистрации (регистрации в налоговых органах), но занимающихся при этом\r\n  систематической продажей товаров (выполнением работ, оказанием услуг).</p>\r\n            <p>В случае выявления фактов размещения объявлений о продаже однотипных товаров от частного лица Squadix имеет право\r\n            отклонить эти объявления и предложить размещать их из коммерческого профиля. Кроме того, в случае получения\r\n            официального запроса от государственных органов в отношении выявленного факта незаконной предпринимательской\r\n  деятельности, Squadix может предоставить данным органам соответствующую информацию.</p>\r\n            <h3>Коммерческое объявление</h3>\r\n            <p>Коммерческие объявления – это объявления, подаваемые от имени юридических лиц или индивидуальных предпринимателей,\r\n            связанные с осуществлением предпринимательской деятельности. Squadix оставляет за собой право самостоятельно\r\n  определять, относится объявление к коммерческому либо к частному.</p>\r\n            <h3>Порядок размещения объявлений на ресурсе</h3>\r\n            <h4>Срок размещения объявлений</h4>\r\n            <p>Все объявления, как частные, так и коммерческие, во всех категориях размещаются на Squadix на неопределенный срок, до\r\n  тех пор пока не будут удалены или пользователем, или администрацией.</p>\r\n            <h4>Удаление объявлений</h4>\r\n            <p>Пользователь может удалить свое объявление в профиле. Удаление означает, что объявление и все данные о нем\r\n  окончательно удаляются из профиля.</p>\r\n            <h4>Повторное размещение объявления</h4>\r\n            <p>Пользователь имеет право подать новое объявление о том же товаре, что и предыдущее, только после того, как его старое\r\n            объявление будет удалено из базы данных. Если на момент подачи нового объявления у пользователя есть активное\r\n            объявление для определенного товара (услуги), то новое объявление не может быть опубликовано. Для повторного\r\n  размещения пользователь может удалить его в соответствии с пунктом <em>\"Удаление объявлений\"</em>.</p>\r\n            <h4>Дубликаты</h4>\r\n            <p>Пользователь может подать только одно объявление для каждого конкретного товара (работы, услуги). Если у пользователя\r\n            уже есть активное объявление о продаже определенного товара (работы, услуги), то при подаче второго объявления с тем\r\n            же товаром (работой, услугой) последнее будет считаться дубликатом и публиковаться не будет. Если у пользователя есть\r\n            объявление с определенным товаром (работой, услугой), то перед подачей нового объявления с тем же товаром (работой,\r\n            услугой) необходимо предварительно удалить существующее объявление. Без удаления старого объявления новое объявление с\r\n            таким же товаром (работой, услугой) также расценивается как дубликат. Также объявление об одном и том же товаре\r\n  (работе, услуге) не разрешается размещать сразу в более чем в одной категории.</p>\r\n            <h4>Дублирование объявления с разных профилей</h4>\r\n            <p>Пользователь не может публиковать объявления об одном и том же товаре (работе, услуге), используя разные профили.\r\n  Такие объявления будут расцениваться как дубликаты.</p>\r\n            <h4>Профиль пользователя</h4>\r\n            <p>Каждый пользователь имеет право зарегистрировать на ресурсе Squadix не более двух профилей: 1 профиль от имени\r\n            частного лица и 1 профиль от имени юридического лица/ИП. Администрация ресурса Squadix оставляет за собой право\r\n            заблокировать профиль пользователя, в отношении которого имеется информация (в том числе жалобы иных пользователей) о\r\n            недобросовестном (в том числе противоправном) характере осуществляемой данным пользователем деятельности посредством\r\n  ресурса Squadix.</p>\r\n            <h3>1. Общие требования к объявлениям, размещаемым на ресурсе Squadix</h3>\r\n            <p><span>Объявления, размещенные на ресурсе Squadix, должны быть составлены на одном из государственных языков\r\n    Республики Беларусь – белорусском или русском, и содержать:</span></p>\r\n            <p><strong>1.1.</strong> Заголовок объявления, описание конкретного товара. Описание должно быть полным и достоверным,\r\n  не содержать контактных данных продавца и ссылок на сторонние ресурсы. В одном объявлении не допускается реклама\r\n  разнородных товаров. Заголовок объявления не должен содержать цены, ссылки на сторонние интернет-ресурсы, имейл\r\n  адреса, контактные данные.</p>\r\n            <p><strong>1.2.</strong> Достоверную цену товара. При этом цена товара обязательно должна указываться в белорусских\r\n  рублях в специальном поле “Цена”.</p>\r\n            <p><strong>1.3.</strong> Достоверную информацию о продавце.</p>\r\n            <p><strong>1.4.</strong> Достоверную информацию о состоянии товара.</p>\r\n            <p><strong>1.5.</strong> Достоверную контактную информацию. К обязательной контактной информации относится номер\r\n  телефона. E-mail указывается в специальном поле при регистрации профиля. Не разрешается указывать его в тексте\r\n  объявления. E-mail не виден в объявлении. Указанный Пользователем при создании профиля e-mail используется для\r\n  официальной информационной рассылки в адрес Пользователя от имени ресурса Squadix. Номер телефона указывается в\r\n  специальном поле. Запрещено указывать номер телефона в поле \"Описание\".</p>\r\n            <p><strong>1.6.</strong> В случае наличия фотографий, объявление должно содержать реальные фотографии предмета сделки,\r\n  соответствующие конкретному продаваемому экземпляру. Не допускается размещение фотографий, на которых содержится\r\n  ссылка на сторонние ресурсы.</p>\r\n            <h3>2. Дополнительные требования к объявлениям от компаний и ИП</h3>\r\n            <p><strong>2.1.</strong> Объявления от компаний и ИП обязательно должны содержать следующую информацию:</p>\r\n            <p><strong>2.1.1.</strong> наименование (для юридического лица) или фамилия и инициалы (для индивидуального\r\n  предпринимателя);</p>\r\n            <p><strong>2.1.2.</strong> учетный номер плательщика;</p>\r\n            <p><strong>2.1.3.</strong> юридический адрес;</p>\r\n            <p><strong>2.1.4.</strong> регистрационный номер лицензии, дата ее выдачи, срок действия и наименование органа,\r\n  выдавшего лицензию (для товаров и услуг, подлежащих лицензированию в соответствии с белорусским законодательством).\r\n</p>\r\n            <p><strong>2.2.</strong> В объявлениях от компаний и ИП, осуществляющих торговлю товарами, также должен быть указан\r\n  адрес местонахождения торговой точки, а для интернет-магазинов - адрес сайта интернет-магазина, зарегистрированного в\r\n  ТР.</p>\r\n            <h3>3. Требования к товарам, размещенным на ресурсе Squadix</h3>\r\n            <p>Товары, работы и услуги, о которых размещаются объявления, должны соответствовать требованиям законодательства\r\n            Республики Беларусь. Размещая объявление о товарах, которые подлежат обязательному подтверждению соответствия в\r\n            Республике Беларусь, рекламодатель самостоятельно несет ответственность за наличие у него документов, подтверждающих\r\n  соответствие товаров, работ и услуг требованиям технических и иных нормативных правовых актов.</p>\r\n            <h3>4. Ограничение по количеству объявлений</h3>\r\n            <p>4.1. Пользователи не имеют ограничений по количеству размещаемых объявлений.</p>\r\n            <h3>5. Требования к фотографиям</h3>\r\n            <p><strong>5.1.</strong> Фотографии должны быть связаны с товаром, описываемой в объявлении.</p>\r\n            <p><strong>5.2.</strong> Фотография товара должна изображать конкретный продаваемый экземпляр, в том виде, в котором он\r\n  находился в момент подачи объявления. Не разрешается размещение фотографий, взятых из каталогов, с сайтов\r\n  производителей или других сайтов.</p>\r\n            <p><strong>5.3.</strong> Одну и ту же фотографию можно использовать одновременно только в одном объявлении.</p>\r\n            <p><strong>5.4.</strong> На фотографии не должно быть ссылок на другие сайты, а также логотипов.</p>\r\n            <p><strong>5.5.</strong> В объявлениях не допускается размещение личных фотографий, а также фотографий моделей из\r\n  каталогов в купальных костюмах или в нижнем белье.</p>\r\n            <p><strong>5.6.</strong> Фото и изображения не должны нарушать авторские права их владельца, фотографа или возможных\r\n  моделей.</p>\r\n            <p><strong>5.7.</strong> На фото не должно быть элементов, которые можно расценить как оскорбительные, противозаконные\r\n  или призывающие к насилию.</p>\r\n            <p><strong>5.8.</strong> Если на фото кроме вас изображены и другие люди, убедитесь в том, что они согласны на\r\n  публикацию своих изображений. Если на фото изображено не принадлежащее вам имущество, то необходимо согласие владельца\r\n  имущества на публикацию данной фотографии.</p>\r\n            <p><strong>5.9.</strong> Не допускается размещение в изображении контактных данных и регистрационных знаков, в том числе\r\n  относящихся к третьим лицам.</p>\r\n            <p><strong>5.10.</strong> Не допускается размещение фотографий и прочих изображений эротического и порнографического\r\n  характера, изображений с сексуальным подтекстом, в том числе изображений обнаженных интимных частей тела, людей в\r\n  прозрачной или откровенной одежде, полностью обнажённых либо снимающих одежду людей.</p>\r\n            <p><strong>5.11.</strong> Не допускается использование изображений, обработанных в специальных редакторах.</p>\r\n            <p><strong>5.12.</strong> Запрещаются к публикации фотографии убитых животных и их освежевания туш.</p>\r\n            <p><strong>5.13.</strong> Запрещаются к публикации фотографии, содержащие следующие виды ритуальной продукции: гробы,\r\n  памятники с фото и данными усопших, фотографии мест захоронения.</p>\r\n            <h3>6. Запрещенные товары и услуги</h3>\r\n            <p>Squadix отклоняет объявления о товарах (работах, услугах), продажа (выполнение, оказание) и/или реклама которых\r\n            запрещена законодательством Республики Беларусь. Squadix также устанавливает ограничения в отношении товаров, работ и\r\n            услуг определенного типа. Подробную информацию о товарах и услугах, которые не подлежат размещению на ресурсе Squadix,\r\n  вы найдете в списке запрещенных товаров и услуг.</p>\r\n            <h3>7. Запрет на размещение определенных объявлений</h3>\r\n            <p><strong>7.1.</strong> Запрещается размещать объявления, содержащие:</p>\r\n            <ul>\r\n                <li>недобросовестную, недостоверную, неэтичную, скрытую рекламу, а также информацию, наносящую вред деловой репутации\r\n    конкурентов рекламодателя;</li>\r\n                <li>пропаганду или призыв к насилию, жестокости и совершению противоправных действий;</li>\r\n                <li>обещание или гарантию, утверждающие будущую эффективность (доходность) рекламируемого вида деятельности;</li>\r\n                <li>информацию, вводящую в заблуждение потребителей относительно качества, количества, состава, способа изготовления и\r\n    иных характеристик продукции (товаров, работ, услуг);</li>\r\n                <li>ненормативную лексику, а также оскорбительные высказывания, в том числе расистского и религиозного характера, а\r\n    также призывы к дискриминации по национальному, расовому, половому или иным признакам;</li>\r\n                <li>нарушение общепринятых норм морали и нравственности;</li>\r\n                <li>информацию, которая может прямо или косвенно повлечь к разглашению сведений, составляющих государственные секреты\r\n    Республики Беларусь;</li>\r\n                <li>требования к возрасту и/или месту жительства работника в объявлениях о вакансиях.</li>\r\n            </ul>\r\n            <p><strong>7.2.</strong> Не разрешается размещать объявления маркетингового характера, то есть объявления, рекламирующие\r\n  не конкретный предлагаемый товар или услугу, а комплекс товаров и услуг в целом.</p>\r\n            <p><strong>7.3.</strong> Не разрешается размещать объявления о знакомствах.</p>\r\n            <p><strong>7.4.</strong> Squadix вправе самостоятельно, с учетом требований и критериев, установленных законодательством\r\n  Республики Беларусь, решать вопрос об отнесении объявления к запрещенной в настоящем разделе рекламе. Squadix также\r\n  вправе принять решение об отказе в размещении отдельных объявлений в случае, если сочтет их содержание не\r\n  соответствующим законодательству Республики Беларусь. Подробную информацию о товарах и услугах, которые не подлежат\r\n  размещению на ресурсе Squadix, вы найдете в списке запрещенных товаров и услуг.</p>\r\n            <h3>8. Изменение и редактирование объявлений</h3>\r\n            <p><strong>8.1.</strong> Администрация ресурса Squadix оставляет за собой право:</p>\r\n            <ul>\r\n                <li>размещать или отклонять объявления;</li>\r\n                <li>определять, какое объявление не соответствует настоящим Правилам;</li>\r\n                <li>удалять объявления, если они не соответствуют правилам размещения объявлений на сайте, без предварительного\r\n    уведомления и объяснения причин;</li>\r\n                <li>изменять требования к содержанию и условиям размещения объявлений;</li>\r\n                <li>изменять содержание и оформление объявлений в соответствии с требованиями, указанными в настоящих Правилах;</li>\r\n                <li>редактировать объявления в целях придания им качеств, удобных для чтения;</li>\r\n                <li>лишать конкретного пользователя права на размещение объявлений в случае систематического нарушения данным\r\n    пользователем настоящих Правил;</li>\r\n                <li>запрашивать у пользователя дополнительные данные, необходимые для размещения объявлений.</li>\r\n            </ul>\r\n            <p><strong>8.2</strong> Замена товара и в объявлении. При изменении или обновлении объявления не разрешается заменять\r\n  товар, описываемую в объявлении, на иной товар; удалять фотографии без добавления новых. При отказе в размещении\r\n  объявления по причине того, что объявление не соответствует правилам, пользователю предлагается возможность\r\n  редактировать объявление.</p>\r\n            <h3>9. Общие условия</h3>\r\n            <p><strong>9.1.</strong> Ответственность. Тот, кто подает объявление, несет полную ответственность за свое объявление.\r\n  Squadix не отвечает за качество рекламируемых в объявлении товаров. Рекламодатель коммерческого объявления\r\n  самостоятельно несет ответственность за наличие у него необходимых согласований, разрешений, лицензий, сертификатов\r\n  и/или иных документов, необходимых для осуществления соответствующего вида деятельности. Тот, кто подает объявление,\r\n  дает согласие на размещение содержания объявления на сетевых страницах партнеров по сотрудничеству Squadix на основе\r\n  тех же самых Правил, которые действуют для объявления при его размещении на Squadix. Рекламодатель гарантирует, что\r\n  его объявление не нарушает авторские права, интеллектуальные права или иные права третьих лиц. Если в отношении\r\n  размещенного объявления ресурсу Squadix будет предъявлена претензия третьих лиц в связи с нарушением законодательства\r\n  Республики Беларусь фактом размещения объявления, то Squadix вправе удалить соответствующее объявление. Кроме того,\r\n  рекламодатель несет личную ответственность за такое нарушение и обязуется освободить Squadix от ответственности по\r\n  возмещению убытков или расходов в связи с таким нарушением.</p>\r\n            <p><strong>9.2.</strong> Личные данные и конфиденциальность. Squadix оказывает помощь правоохранительным органам и\r\n  другим уполномоченным лицам, занимающимся расследованием нарушений, обнаруженных в объявлениях, предоставляя\r\n  необходимую информацию в соответствии с законодательством Республики Беларусь и нашей <a\r\n                    href=\"/policy\">Политикой конфиденциальности</a>. Подробнее с видами личных данных\r\n  пользователей, которые мы обрабатываем, принципами и целями обработки личных данных пользователей, порядком\r\n  предоставления личных данных третьей стороне, редактированием и удалением личных данных, а также с прочими\r\n  положениями, касающимися обработки личных данных пользователей, возможно ознакомиться в нашей <a\r\n                    href=\"/policy\">Политике конфиденциальности</a>.</p>\r\n            <p><strong>9.3.</strong> Электронная почта. E-mail является обязательным для создания профиля и размещения объявления.\r\n  E-mail не отображается на странице просмотра объявления.</p>\r\n            <p><strong>9.4.</strong> Номер мобильного телефона. Номер мобильного телефона является обязательным для размещения\r\n  объявления. Номер мобильного телефона не отображается на странице просмотра объявления.</p>\r\n            <h3>10. Защита прав интеллектуальной собственности</h3>\r\n            <p><strong>10.1.</strong> Ограничения по использованию информации. Весь материал, включая содержание, программное\r\n  обеспечение и услуги, содержащийся на ресурсе Squadix, является собственностью компании Романенко Ильи Олеговича.\r\n  Никакой материал, размещенный на ресурсе Squadix, не может быть скопирован, тиражирован, переиздан, установлен,\r\n  размещен, передан, сохранен или распространен в каком-либо виде. Единственное исключение составляют «загрузка»\r\n  (передача данных с использованием информационных и технических средств связи) для копирования материала исключительно\r\n  в личных целях, при условии, что: (a) все авторские права сохраняются, (б) материал не изменяется, (в) материал не\r\n  используется для ассоциации с нашими товарами, услугами и брендами, и (г) не загружается в качестве материала для баз\r\n  данных. Использование материала на каком-либо ином сайте или компьютерной сети строго запрещено.</p>\r\n            <p><strong>10.2.</strong> Передача сообщений пользователями. Любая информация, относящаяся к посланным сообщениям или\r\n  иной информации (далее собирательно именуемые «Информация»), принадлежит нам на праве собственности. Squadix не\r\n  связывают какие-либо обязательства о конфиденциальности, за исключением нашей <a\r\n                    href=\"/policy\">Политики конфиденциальности</a>, и Squadix не может быть привлечен к\r\n  ответственности за общественное разглашение информации. Несмотря на вышеизложенное, Squadix принадлежат все\r\n  исключительные имущественные права в отношении Информации, и Squadix имеет право использовать данную информацию в\r\n  любых целях, коммерческих и иных, без уплаты какого-либо вознаграждения лицу, которое предоставило соответствующую\r\n  Информацию, или какому-либо иному лицу на основании положений <a href=\"/policy\">Политики\r\n    конфиденциальности</a> и законодательства Республики Беларусь. Отправитель Информации гарантирует, что он/она\r\n  обладает всеми правами, необходимыми для передачи Информации, а также соглашается с условиями <a\r\n                    href=\"/policy\">Политики конфиденциальности</a>, применяемой в отношении обработки личных\r\n  данных Отправителя Информации.</p>\r\n            <h3>Запрещенные товар</h3>\r\n            <ul>\r\n                <li>наркотические средства, психотропные вещества, их прекурсоры;</li>\r\n                <li>продукция военного назначения, боеприпасы, средства активной защиты и все виды оружия;</li>\r\n                <li>конструктивно сходные с оружием изделия (за исключением объявлений компаний-партнеров, имеющих сертификат\r\n    соответствия);</li>\r\n                <li>продукция, предназначенная для подавления массовых беспорядков и разгона шествий, в том числе соответствующие\r\n    транспортные средства и техника, за исключением продукции, предназначенной для противопожарных работ;</li>\r\n                <li>средства огневой защиты, в том числе передвижные средства по типу щитов, а также средства, обеспечивающие высокую\r\n                механическую защиту, за исключением средств, предназначенных для защиты во время занятий спортом или для\r\n    индивидуальной защиты в мирной трудовой деятельности;</li>\r\n                <li>отравляющие вещества, а также иные подобные химические вещества, которые могут нанести вред жизни или здоровью\r\n    человека;</li>\r\n                <li>продукция, представляющая потенциальную опасность для здоровья человека;</li>\r\n                <li>органы и (или) ткани человека, а также предложения, связанные с торговлей людьми;</li>\r\n                <li>продукция сексуального, эротического и порнографического характера; средства контрацепции;</li>\r\n                <li>лекарственные средства (в том числе гомеопатические и аюрведические), травы, растения и иные природные средства,\r\n                лечебные свойства которых широко известны; биологически активные добавки (в том числе спортивное питание,\r\n    изотонические напитки, средства для похудения), витамины; лекарственные средства и витамины для животных;</li>\r\n                <li>алкогольные напитки и табачные изделия;</li>\r\n                <li>взрывчатые и пиротехнические материалы (например, фейерверки, салюты, дымовые шашки);</li>\r\n                <li>контактные линзы;</li>\r\n                <li>детские молочные смеси;</li>\r\n                <li>ловильные инструменты и устройства, владение которыми ограничено законом;</li>\r\n                <li>государственные награды Республики Беларусь и иностранных государств;</li>\r\n                <li>ценные бумаги;</li>\r\n                <li>драгоценные металлы и камни, а также изделия из них (исключение составляют монеты из драгоценных металлов,\r\n    размещенные в разделе \"Коллекции\");</li>\r\n                <li>иностранная валюта;</li>\r\n                <li>криптовалюта;</li>\r\n                <li>недвижимость за рубежом;</li>\r\n                <li>персональные документы, их бланки, а также бланки строгой отчетности;</li>\r\n                <li>регистрационные документы на транспортное средство;</li>\r\n                <li>номера мобильных телефонов;</li>\r\n                <li>адреса электронной почты;</li>\r\n                <li>аккаунты онлайн-игр, коды к играм;</li>\r\n                <li>объекты, находящиеся исключительно в собственности государства в соответствии с законодательством Республики\r\n    Беларусь;</li>\r\n                <li>товары, в наименовании которых используется термин \"электронная сигарета\";</li>\r\n                <li>товары с истекшим сроком годности;</li>\r\n                <li>дикие животные и дикорастущие растения, относящиеся к видам, включенным в Красную книгу Республику Беларусь, также\r\n                виды животных и растений, их части или производные от них (дериваты), подпадающие под действие Конвенции о\r\n                международной торговле видами дикой фауны и флоры, находящимися под угрозой исчезновения, подписанной в г.\r\n    Вашингтоне 3 марта 1973 года (СИТЕС);</li>\r\n                <li>иные товары (работы, услуги), изготовление( выполнение), реализация, использование или реклама которых: направлены\r\n                на нарушение действующего законодательства или введение в заблуждение третьих лиц; запрещены или ограничены\r\n    законодательством Республики Беларусь или решением администрации Squadix.</li>\r\n            </ul>\r\n        </>\r\n    </StaticContainer>\r\n)\r\n\r\nexport default Rules;","import React from 'react';\r\nimport StaticContainer from '../../containers/static';\r\n\r\nconst Terms = () => (\r\n    <StaticContainer>\r\n        <>\r\n            <h2>Пользовательское соглашение</h2>\r\n            <p>Настоящий Публичный договор (далее – Договор) регулирует отношения между Романенко Ильей Олегович, именуемым в\r\n            дальнейшем «Исполнитель», и пользователем сети Интернет, именуемым в дальнейшем «Пользователь», возникающие при\r\n  пользовании сервисами (услугами), предоставляемыми Исполнителем.</p>\r\n            <h3>1. Предмет договора</h3>\r\n            <p><strong>1.1.</strong> Исполнитель предоставляет Пользователю на условиях настоящего Договора возможность\r\n  воспользоваться доступными на ресурсе Squadix сервисами (включая приложение для Android, приложение для IOS, но не\r\n  ограничиваясь ими), в том числе размещение, поиск и просмотр Объявлений, а также иными сервисами ресурса Squadix.\r\n  Плата за размещение объявлений, за поиск и просмотр объявлений, а также за иные услуги, оказываемые Исполнителем\r\n  посредством интернет-ресурса Squadix, не взимается, если иное не предусмотрено информацией, размещенной Исполнителем\r\n  на ресурсе Squadix.</p>\r\n            <p><strong>1.2.</strong> В рамках настоящего договора Исполнителем могут предоставляться Пользователю услуги (платные\r\n  сервисы), перечень, условия оказания, размеры и порядок оплаты которых размещается Исполнителем на ресурсе Squadix.\r\n</p>\r\n            <p>Порядок использования сервисов (услуг), предоставляемых Пользователю посредством ресурса Squadix третьими лицами,\r\n            определяется настоящим Договором (приложениями к Договору, являющимися его неотъемлемой частью), информацией,\r\n            размещенной на ресурсе Squadix и (или) на Интернет-ресурсах третьих лиц, предоставляющих соответствующие сервисы\r\n  (услуги).</p>\r\n            <p><strong>1.3.</strong> Для целей идентификации Исполнителя на ресурсе Squadix, в информационных сообщениях и переписке\r\n  с Пользователями используются следующие наименования и обозначения: Squadix, Squadix.com, Сквадикс и производные\r\n  указанных слов.</p>\r\n            <h3>2. Порядок заключения договора</h3>\r\n            <p><strong>2.1.</strong> Настоящий Договор является публичным договором (статья 396 Гражданского кодекса Республики\r\n  Беларусь), в соответствии с которым Исполнитель принимает на себя обязательство по предоставлению сервисов (оказанию\r\n  услуг) на ресурсе Squadix в отношении каждого Пользователя, обратившегося к Исполнителю для получения таких сервисов\r\n  (услуг), на условиях, установленных законодательством, настоящим договором, Политикой конфиденциальности и (или)\r\n  Правилами размещения объявлений (далее – Правила), являющимися приложением и неотъемлемой частью настоящего договора.\r\n</p>\r\n            <p><strong>2.2.</strong> Размещение текста настоящего Договора на ресурсе Squadix является публичной офертой Исполнителя\r\n  в соответствии с пунктом 2 статьи 407 Гражданского кодекса Республики Беларусь, на основании которой Исполнитель\r\n  заключает Договор с любым из Пользователей, который выразит согласие на его заключение в установленном\r\n  законодательством и настоящим договором порядке.</p>\r\n            <p><strong>2.3.</strong> В соответствии с пунктом 3 статьи 404 и пунктом 3 статьи 408 Гражданского кодекса Республики\r\n  Беларусь настоящий Договор считается заключенным в простой письменной форме с момента прохождения Пользователем\r\n  процедуры регистрации и (или) при подаче объявления на ресурсе Squadix.</p>\r\n            <p>Пользователь одновременно с регистрацией и (или) подачей объявления на ресурсе Squadix подтверждает свое безусловное\r\n  согласие на принятие и выполнение условий настоящего Договора.</p>\r\n            <p><strong>2.4.</strong> Заключение настоящего Договора производится в соответствии со статьей 398 Гражданского кодекса\r\n  Республики Беларусь посредством принятия Пользователем условий настоящего Договора не иначе как путем присоединения к\r\n  предложенному Договору в целом без каких-либо оговорок и исключений.</p>\r\n            <p>В случае несогласия Пользователя с какими-либо из положений настоящего Договора Пользователь не вправе осуществлять\r\n  регистрацию, подавать объявления и использовать какие-либо иные сервисы ресурса Squadix.</p>\r\n            <p><strong>2.5.</strong> Местом заключения договора Стороны признают местонахождение Исполнителя.</p>\r\n            <h3>3. Условия предоставления услуг</h3>\r\n            <p><strong>3.1.</strong> Сервисы (услуги), предоставляемые на ресурсе Squadix, могут предоставляться как\r\n  зарегистрированным, так и незарегистрированным на ресурсе Пользователям. В случае, если для предоставления\r\n  Пользователям определенного сервиса (услуги) необходима их регистрация на ресурсе Squadix, Пользователи информируются\r\n  об этом средствами ресурса.</p>\r\n            <p>Сервисы (услуги) посредством ресурса Squadix могут предоставляться Пользователям как непосредственно Исполнителем,\r\n  так и третьими лицами-партнерами Исполнителя, о чем Пользователи информируются средствами ресурса Squadix.</p>\r\n            <p><strong>3.2.</strong> Отдельные сервисы (услуги) ресурса Squadix предоставляются только зарегистрированным\r\n  Пользователям, о чем Пользователь информируется средствами ресурса до момента предоставления таких сервисов (услуг).\r\n</p>\r\n            <p><strong>3.3.</strong> Порядок сбора, обработки и хранения личных данных пользователей и посетителей ресурса Squadix\r\n  осуществляется в соответствии с <a href=\"/policy\">Политикой конфиденциальности</a>. Сервисы\r\n  (услуги), предоставляемые Исполнителем на ресурсе Squadix, предоставляются пользователям, согласившимся с Политикой\r\n  конфиденциальности. Размещая объявления на ресурсе Squadix, посещая его и пользуясь услугами на ресурсе Squadix,\r\n  Пользователь принимает условия Политики конфиденциальности и соглашается со сбором, обработкой и хранением своих\r\n  личных данных Исполнителем в соответствии с условиями Политики конфиденциальности.</p>\r\n            <p>Предоставление Пользователем своих личных данных партнерам ресурса Squadix (финансовым и иным сервисам) путем\r\n            внесения таких данных в онлайн-формы, ставшие доступными Пользователю в результате перехода по размещенным на данном\r\n            ресурсе ссылкам (гиперссылкам, баннерам, и др.), подтверждает ознакомление и согласие Пользователя с правилами и\r\n            условиями использования данных и (или) оказания услуг, действующими у соответствующего партнера ресурса Squadix. Такие\r\n            данные считаются предоставленными Пользователями партнерам ресурса Squadix, и Squadix не несет ответственности за их\r\n  обработку и использование.</p>\r\n            <h3>4. Регистрация на ресурсе Squadix</h3>\r\n            <p><strong>4.1.</strong> Пользователь имеет право зарегистрироваться на ресурсе Squadix (создать профиль) с целью\r\n  получения дополнительных сервисов, заполнив в соответствующем разделе ресурса Squadix форму с обязательным указанием\r\n  информации, предусмотренной данной формой.</p>\r\n            <p><strong>4.2.</strong> Пользователь несет ответственность за достоверность и корректность информации, указанной им при\r\n  регистрации на ресурсе Squadix, а также за все действия, совершенные с использованием своего электронного адреса и\r\n  пароля для входа в профиль на ресурсе Squadix. Пользователь имеет право пользоваться сервисами ресурса Squadix только\r\n  при помощи собственного электронного адреса и пароля. Не допускается использование в качестве имени пользователя в его\r\n  профиле наименований «Squadix», «Сквадикс», производных от них слов или сокращений, в любых интерпретациях и\r\n  сочетаниях, а также любых иных общеизвестных и (или) в том числе охраняемых наименований, использование которых\r\n  третьими лицами без согласия их владельцев не допускается и (или) может ввести иных пользователей в заблуждение\r\n  относительно личности (принадлежности) указавшего их пользователя. При выявлении Исполнителем факта нарушения\r\n  Пользователем настоящего правила Пользователь обязан устранить данное нарушение в течение 3 (трех) дней с момента его\r\n  уведомления об этом Исполнителем. В случае неустранения Пользователем данного нарушения в установленный срок\r\n  Исполнитель вправе прекратить оказание Пользователю услуг, предусмотренных Договором, а также блокировать его доступ к\r\n  личному кабинету на ресурсе Squadix до момента устранения Пользователем выявленного нарушения.</p>\r\n            <p><strong>4.3.</strong> Пользователь обязан немедленно изменить данные, используемые для входа в сервисы ресурса\r\n  Squadix, если у него есть причины подозревать, что его электронные адреса и пароли, используемые для входа в сервисы\r\n  ресурса Squadix, были раскрыты или могут быть использованы третьими лицами.</p>\r\n            <p><strong>4.4.</strong> Исполнитель сохраняет за собой право в случае необходимости связываться с Пользователем:\r\n  направлять информационные сообщения на электронный адрес, указанный при регистрации, а также на мобильный телефон\r\n  Пользователя. Направление Исполнителем необходимой для исполнения настоящего Договора информации по указанным в\r\n  профиле и (или) онлайн-форме для заказа сервиса (услуги) адресу электронной почты и (или) номеру мобильного телефона\r\n  признается надлежащим уведомлением Исполнителем Пользователя.</p>\r\n            <p><strong>4.5.</strong> Пользователю запрещается предоставлять доступ к профилю, зарегистрированному на Squadix,\r\n  третьим лицам.</p>\r\n            <p><strong>4.6.</strong> Регистрируясь на Интернет-ресурсе Squadix Пользователь выражает свое полное и безусловное\r\n  согласие с условиями настоящего Договора.</p>\r\n            <h3>5. Размещение объявлений на ресурсе Squadix</h3>\r\n            <p><strong>5.1.</strong> Размещение Пользователем объявления на ресурсе Squadix осуществляется путем заполнения в\r\n  соответствующем разделе ресурса Squadix специальной формы с обязательным указанием информации об объекте\r\n  рекламирования, своих контактных (в необходимых случаях – регистрационных) данных и иной обязательной информации,\r\n  предусмотренной данной формой.</p>\r\n            <p><strong>5.2.</strong> Информация, размещаемая Пользователем при подаче объявления о продаже товаров на ресурсе\r\n  Squadix, должна являться точной, полной и достоверной, а также безусловно соответствовать иным требованиям,\r\n  предусмотренным Договором, <a href=\"/rules\">Правилами</a>, <a\r\n                    href=\"/policy\">Политикой конфиденциальности</a> и (или) инструкциям Исполнителя,\r\n  размещаемым на ресурсе Squadix.</p>\r\n            <p><strong>5.3.</strong> Размещая информацию о товаре, Пользователь подтверждает, что в соответствии с требованиями\r\n  законодательства Республики Беларусь он имеет право продавать этот товар (оказывать услугу, выполнять работу) и\r\n  самостоятельно несет ответственность за наличие подтверждающих данное право документов.</p>\r\n            <p><strong>5.4.</strong> Требования, предъявляемые Исполнителем к объявлениям, их созданию, редактированию и удалению, а\r\n  также к рекламируемым товарам, установлены Правилами.</p>\r\n            <h3>6. Размещение информационного сообщения на ресурсе Squadix</h3>\r\n            <p><strong>6.1.</strong> Размещение Пользователем информационного сообщения (событие, новости) на ресурсе Squadix\r\n  осуществляется путем заполнения в соответствующем разделе ресурса Squadix специальной формы с обязательным указанием\r\n  обязательной информации, предусмотренной данной формой.</p>\r\n            <p><strong>6.2.</strong> Информация, размещаемая Пользователем при подаче информационного сообщения (событие, новости)\r\n  на ресурсе Squadix, должна являться точной, полной и достоверной, а также безусловно соответствовать иным требованиям,\r\n  предусмотренным Договором, Правилами, Политикой конфиденциальности и (или) инструкциям Исполнителя, размещаемым на\r\n  ресурсе Squadix.</p>\r\n            <p><strong>6.3.</strong> Размещая информационное сообщение (событие, новость), Пользователь подтверждает, что в\r\n  соответствии с требованиями законодательства Республики Беларусь он имеет право сообщать и раскрывать данную\r\n  информацию и самостоятельно несет ответственность за наличие подтверждающих данное право документов.</p>\r\n            <p><strong>6.4.</strong> Требования, предъявляемые Исполнителем к информационному сообщению (событие, новости), их\r\n  созданию, редактированию и удалению, а также к рекламируемым товарам, установлены Правилами.</p>\r\n            <h3>7. Исполнитель обязуется:</h3>\r\n            <p><strong>7.1.</strong> качественно и в установленные сроки предоставлять сервисы (оказывать услуги) Пользователю при\r\n  условии соблюдения Пользователем всех требований настоящего Договора;</p>\r\n            <p><strong>7.2.</strong> не разглашать информацию, указанную Пользователем при регистрации, за исключением случаев,\r\n  прямо предусмотренных законодательством Республики Беларусь;</p>\r\n            <p><strong>7.3.</strong> информировать Пользователя об изменении условий настоящего Договора и (или) условий\r\n  функционирования ресурса путем размещения соответствующей информации на ресурсе Squadix и (или) ее рассылки на\r\n  указанный в профиле Пользователя e-mail.</p>\r\n            <h3>8. Пользователь обязуется:</h3>\r\n            <p><strong>8.1.</strong> предоставить при регистрации на ресурсе Squadix и подаче объявлений, а также в иных необходимых\r\n  случаях сведения, отвечающие требованиям, предусмотренным настоящим договором;</p>\r\n            <p><strong>8.2.</strong> размещать объявления на ресурсе Squadix в соответствии с Законом Республики Беларусь «О\r\n  рекламе», иными нормативными правовыми актами Республики Беларусь, настоящим Договором, Правилами, Политикой\r\n  конфиденциальности и (или) инструкциями Исполнителя;</p>\r\n            <p><strong>8.3.</strong> письменно уведомить Исполнителя при наличии претензий по оказанным Исполнителем услугам не\r\n  позднее 5 (пяти) рабочих дней с момента окончания оказания таких услуг.</p>\r\n            <p><strong>8.4.</strong> на основании информации, размещенной Исполнителем на ресурсе Squadix и (или) отправленной\r\n  Исполнителем на указанные Пользователем на ресурсе Squadix (в профиле Пользователя или форме заказа сервиса (услуги))\r\n  адрес электронной почты и (или) номер мобильного телефона, выполнять указанные действия (мероприятия), необходимые для\r\n  продолжения беспрепятственного использования ресурса Squadix и получения предоставляемых на данном ресурсе сервисов\r\n  (услуг).</p>\r\n            <p><strong>8.5.</strong> в установленных ресурсом Squadix случаях и порядке производить верификацию номера своего\r\n  мобильного телефона для получения права пользования определенными сервисами ресурса Squadix.</p>\r\n            <h3>9. Право Исполнителя отказать в оказании услуг</h3>\r\n            <p><strong>9.1.</strong> Исполнитель имеет право не оказывать услуги Пользователю либо прекратить оказание услуг в\r\n  случае, если объявление Пользователя нарушает Закон Республики Беларусь «О рекламе», иные нормативные правовые акты\r\n  Республики Беларусь, настоящий Договор, Правила, Политику конфиденциальности, а также иные инструкции Исполнителя,\r\n  размещенные на ресурсе Squadix.</p>\r\n            <h3>10. Ответственность сторон, порядок урегулирования споров</h3>\r\n            <p><strong>10.1.</strong> За невыполнение условий настоящего Договора Стороны несут ответственность в соответствии с\r\n  законодательством Республики Беларусь.</p>\r\n            <p><strong>10.2.</strong> Пользователь несет ответственность за соответствие размещенной им информации (объявлений), а\r\n  также совершаемых им на ресурсе Squadix действий законодательству, Политике конфиденциальности и (или) Правилам.</p>\r\n            <p><strong>10.3.</strong> Стороны освобождаются от ответственности за неисполнение либо ненадлежащее исполнение своих\r\n  обязательств по настоящему Договору, если невозможность их выполнения обусловлена действием обстоятельств\r\n  непреодолимой силы.</p>\r\n            <p><strong>10.4.</strong> Все споры и разногласия, которые могут возникнуть при исполнении обязательств по настоящему\r\n  Договору или в связи с ним, разрешаются Сторонами путем переговоров. В случае невозможности урегулирования разногласий\r\n  споры по настоящему Договору разрешаются в порядке, предусмотренном законодательством Республики Беларусь.</p>\r\n            <h3>11. Срок действия договора, порядок его изменения</h3>\r\n            <p><strong>11.1.</strong> Настоящий Договор вступает в силу с даты принятия (акцепта) его условий Пользователем в\r\n  соответствии с <em>подпунктом 2.4</em> настоящего Договора и действует до момента окончания предоставления\r\n  Исполнителем заказанных (оплаченных) Пользователем сервисов.</p>\r\n            <p><strong>11.2.</strong> Исполнитель вправе самостоятельно в одностороннем порядке изменить условия настоящего Договора\r\n  при условии соблюдения требований <em>подпункта 7.3</em> настоящего Договора;</p>\r\n            <p><strong>11.3.</strong> Исполнитель вправе отказаться от исполнения настоящего Договора в одностороннем порядке при\r\n  нарушении Пользователем его условий. При этом уплаченные суммы Пользователю не возвращаются.</p>\r\n            <h3>12. Реквизиты сторон</h3>\r\n            <p><strong>12.1.</strong> Стороны соглашаются, что реквизитами Пользователя считается информация, указанная им при\r\n  заполнении формы для заказа услуг.</p>\r\n            <p><strong>12.2.</strong> Реквизиты Исполнителя: <a\r\n                href=\"mailto:strike.app.service@gmail.com\">strike.app.service@gmail.com</a></p>\r\n        </>\r\n    </StaticContainer>\r\n)\r\n\r\nexport default Terms;","export default __webpack_public_path__ + \"static/media/ios.d4ed0ea7.svg\";","export default __webpack_public_path__ + \"static/media/android.d8dbe037.svg\";","import React from 'react';\r\nimport logo from '../../assets/img/logo.png';\r\nimport AS from '../../assets/img/ios.svg';\r\nimport PM from '../../assets/img/android.svg';\r\n\r\nimport s from './static.module.scss';\r\n\r\nconst Apps = () => {\r\n    return (\r\n        <div className={s.container}>\r\n            <img className={s.logo} src={logo} alt=\"logo\" />\r\n            <div className={s.row}>\r\n                <a \r\n                    className={s.link} \r\n                    href=\"https://apps.apple.com/us/app/squadix/id1538492084?itsct=apps_box&amp;itscg=30200\"\r\n                >\r\n                    <img src={AS} alt=\"Download on the App Store\" />\r\n                </a>\r\n                <a \r\n                    className={s.link} \r\n                    href=\"https://play.google.com/store/apps/details?id=com.airsoft.android&amp;utm_source=site&amp;utm_campaign=promo&amp;pcampaignid=pcampaignidMKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1\"\r\n                >\r\n                    <img alt=\"Get it on Google Play\" src={PM} />\r\n                </a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Apps;","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport Login from './pages/login';\r\nimport Register from './pages/register';\r\nimport Reset from './pages/reset';\r\nimport Events from './pages/events';\r\nimport Stock from './pages/stock';\r\nimport News from './pages/news';\r\nimport NewsPost from './pages/news-post';\r\nimport EventsPost from './pages/events-post';\r\nimport StockPost from './pages/stock-post';\r\nimport Profile from './pages/profile';\r\nimport Me from './pages/me';\r\nimport Policy from './pages/static/policy';\r\nimport Rules from './pages/static/rules';\r\nimport Terms from './pages/static/terms';\r\nimport Apps from './pages/static/apps';\r\n\r\nimport {\r\n  HOME_PATH,\r\n  LOGIN_PATH,\r\n  REGISTER_PATH,\r\n  EVENTS_PATH,\r\n  STOCK_PATH,\r\n  NEWS_PATH,\r\n  NEWS_POST_PATH,\r\n  EVENTS_POST_PATH,\r\n  STOCK_POST_PATH,\r\n  PROFILE_PATH,\r\n  ME_PATH,\r\n  POLICY_PATH,\r\n  RULES_PATH,\r\n  TERMS_PATH,\r\n  APPS_PATH,\r\n  RESTORE_PATH,\r\n  RESTORE_TOKEN_PATH\r\n} from './constants/routes.constants';\r\n\r\nconst Routes = () => (\r\n  <Switch>\r\n    <Route path={RESTORE_PATH} exact component={Reset} />\r\n    <Route path={RESTORE_TOKEN_PATH} component={Reset} />\r\n    <Route path={LOGIN_PATH} component={Login} />\r\n    <Route path={REGISTER_PATH} component={Register} />\r\n    <Route path={EVENTS_PATH} exact component={Events} />\r\n    <Route path={STOCK_PATH} exact component={Stock} />\r\n    <Route path={NEWS_PATH} exact component={News} />\r\n    <Route path={NEWS_POST_PATH} component={NewsPost} />\r\n    <Route path={EVENTS_POST_PATH} component={EventsPost} />\r\n    <Route path={STOCK_POST_PATH} component={StockPost} />\r\n    <Route path={PROFILE_PATH} component={Profile} />\r\n    <Route path={ME_PATH} component={Me} />\r\n    <Route path={POLICY_PATH} component={Policy} />\r\n    <Route path={RULES_PATH} component={Rules} />\r\n    <Route path={TERMS_PATH} component={Terms} />\r\n    <Route path={APPS_PATH} component={Apps} />\r\n    <Route path={HOME_PATH}>\r\n      <Redirect to={NEWS_PATH} />\r\n    </Route>\r\n  </Switch>\r\n);\r\n\r\nexport default Routes;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport cn from 'classnames';\r\n\r\nimport s from './modal.module.scss';\r\n\r\nconst Modal = ({children, onClose, className}) => {\r\n\r\n  const modalRef = useRef();\r\n\r\n  const handleClickOutside = (e) => {\r\n    if (modalRef.current && !modalRef.current.contains(e.target)) {\r\n        onClose();\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\r\n  }, [])\r\n\r\n  return (\r\n    <div \r\n      className={s.container}\r\n    >\r\n      <div\r\n        ref={modalRef} \r\n        className={cn(s.modal, className)}\r\n      >\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport Button from '../../../components/button';\r\nimport { useForm } from 'react-hook-form';\r\nimport Modal from '../../../components/modal';\r\n\r\nimport s from './comment-modal.module.scss';\r\n\r\nconst CommentModal = ({ closeModal, addComment }) => {\r\n\r\n  const { handleSubmit, formState: {errors}, register } = useForm();\r\n\r\n  const onComment = (data) => {\r\n    addComment(data);\r\n    closeModal();\r\n  }\r\n\r\n  return (\r\n    <Modal \r\n      onClose={closeModal}\r\n    >\r\n      Ваш комментарий\r\n      <form onSubmit={handleSubmit(onComment)}>\r\n        <textarea\r\n          className={s.textarea} \r\n          {...register('text', {\r\n            required: 'Введите комментарий',\r\n          })}\r\n        />\r\n        <span className={s.error}>{errors?.text?.message}</span>\r\n        <Button \r\n          text=\"Отправить\"\r\n          type=\"submit\"\r\n        />\r\n      </form>\r\n    </Modal>\r\n  )\r\n  \r\n}\r\n\r\nexport default CommentModal;\r\n","export const fileToDataUri = (image) => {\r\n  return new Promise((res) => {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () => {\r\n      res(reader.result.replace(/^data:.+;base64,/, ''))\r\n    });\r\n    reader.readAsDataURL(image);\r\n  })\r\n}\r\n\r\nexport const uploadImage = async (e, setCallback) => {\r\n  if (e.target.files && e.target.files.length > 0) {\r\n    const newImagesPromises = [];\r\n    for (let i = 0; i < e.target.files.length; i++) {\r\n      newImagesPromises.push(fileToDataUri(e.target.files[i]));\r\n    }\r\n    const newImages = await Promise.all(newImagesPromises);\r\n    setCallback(newImages);\r\n  }\r\n}\r\n\r\nexport const filterPassedTime = (time) => {\r\n  const currentDate = new Date();\r\n  const selectedDate = new Date(time);\r\n\r\n  return currentDate.getTime() < selectedDate.getTime();\r\n}\r\n","import React, { useState } from 'react';\r\nimport cn from 'classnames';\r\n\r\nimport s from './textarea.module.scss';\r\n\r\nconst Textarea = ({label, className, error, onChange, value, ...props}) => {\r\n\r\n  const [isFocused, setIsFocused] = useState(false);\r\n\r\n  return (\r\n    <div className={cn(s.container, className)}>\r\n      {label && <span className={s.label}>{label}</span>}\r\n      <div className={cn(s.wrap, {[s.active]: isFocused})}>\r\n        <textarea\r\n          onFocus={() => setIsFocused(true)} \r\n          onBlur={() => setIsFocused(false)} \r\n          className={s.input}\r\n          onChange={(e) => onChange(e.target.value)} \r\n          value={value}\r\n          {...props} \r\n        />\r\n        {error && <span className={s.error}>{error}</span>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Textarea;\r\n","import React, { useState } from 'react';\r\nimport Button from '../../../components/button';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport Modal from '../../../components/modal';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { postSchema } from '../../../helpers/validation-schemas';\r\nimport { getAddressByCoords } from '../../../services/events';\r\nimport { toast } from 'react-toastify';\r\nimport { ERRORS } from '../../../constants/error.constants';\r\nimport { uploadImage, filterPassedTime } from '../../../helpers/form-helpers';\r\nimport DatePicker from 'react-datepicker';\r\nimport Textarea from '../../../components/textarea';\r\nimport Input from '../../../components/input';\r\n\r\nimport s from './post-modal.module.scss';\r\n\r\n\r\nconst PostModal = ({ closeModal, addPost, isEvent }) => {\r\n\r\n  const [images, setImages] = useState([]);\r\n  const [eventDate, setEventDate] = useState(new Date());\r\n\r\n  const { handleSubmit, formState: { errors }, setValue, control } = useForm({\r\n    resolver: yupResolver(postSchema),\r\n  });\r\n  const onPost = async (data) => {\r\n\r\n    if (isEvent && !images.length) {\r\n      toast.error('Добавьте хотя бы одну картинку');\r\n      return;\r\n    }\r\n\r\n    try {\r\n\r\n      const address = await getAddressByCoords(data.eventLatitude, data.eventLongitude);\r\n\r\n      await addPost({\r\n        ...data, \r\n        images,\r\n        contentType: 'POST',\r\n        ...(isEvent && { \r\n          eventDate,\r\n          startTime: eventDate,\r\n          eventAddress: `${address.road}, ${address.house_number}, ${address.city}`\r\n        }),\r\n      });\r\n      closeModal();\r\n      toast.success('Пост успешно добавлен');\r\n    } catch (e) {\r\n      toast.error(ERRORS[e?.response?.data?.message]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal \r\n      onClose={closeModal}\r\n    >\r\n      Добавить пост\r\n      <form onSubmit={handleSubmit(onPost)}>\r\n        {isEvent && \r\n          <>\r\n            <DatePicker \r\n              selected={eventDate} \r\n              onChange={date => setEventDate(date)} \r\n              minDate={new Date()}\r\n              showTimeSelect\r\n              filterTime={filterPassedTime}\r\n              timeIntervals={5}\r\n              dateFormat=\"dd/MM/yyyy HH:mm\"\r\n              className={s.dateInput}\r\n              wrapperClassName={s.date}\r\n            />\r\n            <div className={s.row}>\r\n              <Controller \r\n                control={control}\r\n                name=\"eventLatitude\"\r\n                render={({field: {value}}) => (\r\n                  <Input \r\n                    wrapperClassname={s.input}\r\n                    className={s.input}\r\n                    value={value}\r\n                    type=\"number\"\r\n                    onChange={(val) => setValue('eventLatitude', val)}\r\n                    error={errors?.eventLatitude?.message}\r\n                    placeholder=\"Широта\"\r\n                  />\r\n                )}\r\n              />\r\n              <Controller \r\n                control={control}\r\n                name=\"eventLongitude\"\r\n                render={({field: {value}}) => (\r\n                  <Input \r\n                    wrapperClassname={s.input}\r\n                    className={s.input}\r\n                    type=\"number\"\r\n                    value={value}\r\n                    onChange={(val) => setValue('eventLongitude', val)}\r\n                    error={errors?.eventLongitude?.message}\r\n                    placeholder=\"Долгота\"\r\n                  />\r\n                )}\r\n              />\r\n            </div>\r\n          </>\r\n        }\r\n        <Controller \r\n          control={control}\r\n          name=\"description\"\r\n          render={({field: {value}}) => (\r\n            <Textarea \r\n              className={s.text}\r\n              value={value}\r\n              onChange={(val) => setValue('description', val)}\r\n              error={errors?.description?.message}\r\n              placeholder=\"Введите описание\"\r\n            />\r\n          )}\r\n        />\r\n        <input \r\n          type=\"file\"\r\n          multiple \r\n          onChange={(e) => uploadImage(e, setImages)}\r\n          accept=\"image/jpeg, image/png\"\r\n          className={s.file}\r\n        />\r\n        <Button \r\n          className={s.btn}\r\n          text=\"Отправить\"\r\n          type=\"submit\"\r\n        />\r\n      </form>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default PostModal;\r\n","import React, { useState } from 'react';\r\nimport Button from '../../../components/button';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport Modal from '../../../components/modal';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { productSchema } from '../../../helpers/validation-schemas';\r\nimport { toast } from 'react-toastify';\r\nimport { ERRORS } from '../../../constants/error.constants';\r\nimport { uploadImage } from '../../../helpers/form-helpers';\r\nimport Input from '../../../components/input';\r\nimport Checkbox from '../../../components/checkbox';\r\nimport Textarea from '../../../components/textarea';\r\n\r\nimport s from './product-modal.module.scss';\r\n\r\n\r\nconst ProductModal = ({ closeModal, addProduct, categories }) => {\r\n\r\n  const [images, setImages] = useState([]);\r\n\r\n  const { handleSubmit, formState: { errors }, register, setValue, getValues, control } = useForm({\r\n    reValidateMode: 'onChange',\r\n    resolver: yupResolver(productSchema),\r\n    defaultValues: {\r\n      postalDeliveryAvailable: false,\r\n    }\r\n  });\r\n\r\n  const values = getValues();\r\n\r\n  const onPost = async (data) => {\r\n    try {\r\n      await addProduct({\r\n        ...data, \r\n        images,\r\n      });\r\n      closeModal();\r\n      toast.success('Товар успешно добавлен и отправлен на модерацию');\r\n    } catch (e) {\r\n      toast.error(ERRORS[e?.response?.data?.message]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal \r\n      onClose={closeModal}\r\n    >\r\n      Добавить товар\r\n      <form onSubmit={handleSubmit(onPost)}>\r\n        <Input \r\n          placeholder=\"Наименование товара*\"\r\n          onChange={(val) => setValue('name', val)}\r\n          error={errors?.name?.message}\r\n          className={s.input}\r\n          value={values.name}\r\n        />\r\n        <Input \r\n          placeholder=\"Местонахождение\"\r\n          onChange={(val) => setValue('region', val)}\r\n          error={errors?.region?.message}\r\n          className={s.input}\r\n          value={values.region}\r\n        />\r\n        <select size=\"1\" {...register('category')} className={s.select}>\r\n          {categories?.map(({name}) => <option key={name} value={name}>{name}</option>)}\r\n        </select>\r\n        <Controller \r\n          control={control}\r\n          name=\"description\"\r\n          render={({field: {value}}) => (\r\n            <Textarea \r\n              className={s.text}\r\n              value={value}\r\n              onChange={(val) => setValue('description', val)}\r\n              error={errors?.description?.message}\r\n              placeholder=\"Введите описание\"\r\n            />\r\n          )}\r\n        />\r\n        <Controller \r\n          control={control}\r\n          name=\"postalDeliveryAvailable\"\r\n          render={({field: {value}}) => (\r\n          <Checkbox \r\n            label=\"Доставка почтой\"\r\n            onChange={(val) => setValue('postalDeliveryAvailable', val)}\r\n            checked={value}\r\n            className={s.check}\r\n          />\r\n          )}\r\n        />\r\n        <input \r\n          type=\"file\"\r\n          multiple \r\n          onChange={(e) => uploadImage(e, setImages)}\r\n          accept=\"image/jpeg, image/png\"\r\n          className={s.file}\r\n        />\r\n        <Input \r\n          type=\"number\"\r\n          placeholder=\"Цена, BYN*\"\r\n          onChange={(val) => setValue('price', val)}\r\n          error={errors?.price?.message}\r\n          className={s.input}\r\n          value={values.price}\r\n        />\r\n        <Button \r\n          text=\"Отправить\"\r\n          type=\"submit\"\r\n          className={s.btn}\r\n        />\r\n      </form>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ProductModal;\r\n","import React from 'react';\r\nimport Button from '../../../components/button';\r\nimport { useForm } from 'react-hook-form';\r\nimport Modal from '../../../components/modal';\r\nimport Input from '../../../components/input';\r\nimport { toast } from 'react-toastify';\r\nimport { ERRORS } from '../../../constants/error.constants';\r\nimport { changeSchema } from '../../../helpers/validation-schemas';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\nimport s from './change-pass.module.scss';\r\n\r\nconst ChangePassModal = ({ closeModal, changePass }) => {\r\n\r\n  const { handleSubmit, formState: { errors }, getValues, setValue } = useForm({\r\n    resolver: yupResolver(changeSchema),\r\n  });\r\n  const values = getValues();\r\n\r\n  const onChangePass = (data) => {\r\n    try {\r\n        changePass(data);\r\n        toast.success('Пароль изменен');\r\n      } catch (e) {\r\n        toast.error(ERRORS[e?.response?.data?.message] || 'Ошибка');\r\n      }\r\n    closeModal();\r\n  }\r\n\r\n  return (\r\n    <Modal \r\n      onClose={closeModal}\r\n    >\r\n      Сменить пароль\r\n      <form onSubmit={handleSubmit(onChangePass)}>\r\n        <Input \r\n            type=\"password\"\r\n            className={s.input}\r\n            value={values.old}\r\n            onChange={(val) => setValue('oldPassword', val)}\r\n            error={errors?.oldPassword?.message}\r\n            placeholder=\"Старый пароль\"\r\n        />\r\n        <Input \r\n            type=\"password\"\r\n            className={s.input}\r\n            value={values.old}\r\n            onChange={(val) => setValue('newPassword', val)}\r\n            error={errors?.newPassword?.message}\r\n            placeholder=\"Новый пароль\"\r\n        />\r\n        <Button \r\n          text=\"Отправить\"\r\n          type=\"submit\"\r\n          className={s.btn}\r\n        />\r\n      </form>\r\n    </Modal>\r\n  )\r\n  \r\n}\r\n\r\nexport default ChangePassModal;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CommentModal from './comment-modal';\r\nimport PostModal from './post-modal';\r\nimport ProductModal from './product-modal';\r\nimport ChangePassModal from './change-pass-modal';\r\nimport { closeModal } from '../../actions/modals-actions';\r\nimport { POST_MODAL, COMMENT_MODAL, PRODUCT_MODAL, CHANGE_PASS_MODAL } from '../../constants/modal.constants';\r\n\r\nconst Modals = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const onClose = (modal) => dispatch(closeModal(modal));\r\n  \r\n  const { commentModal, postModal, productModal, changePassModal } = useSelector(state => state.modals);\r\n\r\n  return(\r\n    <>\r\n      {commentModal.show && <CommentModal closeModal={() => onClose(COMMENT_MODAL)} {...commentModal.params} />}\r\n      {postModal.show && <PostModal closeModal={() => onClose(POST_MODAL)} {...postModal.params} />}\r\n      {productModal.show && <ProductModal closeModal={() => onClose(PRODUCT_MODAL)} {...productModal.params} />}\r\n      {changePassModal.show && <ChangePassModal closeModal={() => onClose(CHANGE_PASS_MODAL)} {...changePassModal.params} />}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Modals;\r\n","import React, { useEffect } from 'react';\r\nimport Routes from './routes';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { matchPath } from 'react-router'; \r\nimport Modals from './containers/modals';\r\nimport { LOGIN_PATH, APPS_PATH, UNAUTHORIZED_PAGES_PATH, RESTORE_TOKEN_PATH } from './constants/routes.constants';\r\nimport { detectMob } from './helpers/device-helpers';\r\n\r\nimport './assets/styles/app.scss';\r\n\r\n\r\nconst App = () => {\r\n\r\n  const history = useHistory();\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n      const isMobile = detectMob();\r\n      if (isMobile) {\r\n        history.push(APPS_PATH);\r\n        return;\r\n      };\r\n      const token = localStorage.getItem('accessToken');\r\n      if (!token \r\n          && !UNAUTHORIZED_PAGES_PATH.includes(pathname)\r\n          && matchPath(pathname, {path: RESTORE_TOKEN_PATH, exact: true, strict: false}) === null \r\n      ) {\r\n        history.push(LOGIN_PATH);\r\n      }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <ToastContainer />\r\n      <Routes />\r\n      <Modals />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export const detectMob = () => {\r\n    const toMatch = [\r\n        /Android/i,\r\n        /webOS/i,\r\n        /iPhone/i,\r\n        /iPad/i,\r\n        /iPod/i,\r\n        /BlackBerry/i,\r\n        /Windows Phone/i\r\n    ];\r\n\r\n    return toMatch.some((toMatchItem) => {\r\n        return navigator.userAgent.match(toMatchItem);\r\n    });\r\n}","import { SET_ME, SET_USER, SET_AVATAR, REMOVE_AVATAR } from '../constants/actions.constants';\r\n\r\nconst initialState = {\r\n  me: {},\r\n  profile: {}\r\n};\r\n\r\nexport default function userReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_ME:\r\n      return {\r\n        ...state,\r\n        me: action.payload,\r\n      };\r\n    case SET_USER:\r\n      return {\r\n        ...state,\r\n        profile: action.payload,\r\n      };\r\n    case SET_AVATAR:\r\n      return {\r\n        ...state,\r\n        me: {\r\n          ...state.me,\r\n          profilePictureUrl: action.payload\r\n        },\r\n      };\r\n    case REMOVE_AVATAR:\r\n      return {\r\n        ...state,\r\n        me: {\r\n          ...state.me,\r\n          profilePictureUrl: null,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  SET_NEWS,\r\n  SET_NEWS_POST,\r\n  SET_NEWS_POST_COMMENTS,\r\n  CLEAR_NEWS_POST,\r\n  LIKE_NEWS,\r\n  SET_NEWS_COMMENT,\r\n  LIKE_NEWS_POST,\r\n  CLEAR_NEWS,\r\n  ADD_NEWS_POST\r\n} from '../constants/actions.constants';\r\n\r\nconst initialState = {\r\n  currentPage: 0,\r\n  totalPages: 0,\r\n  content: [],\r\n  post: {},\r\n  comments: []\r\n};\r\n\r\nexport default function newsReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_NEWS:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    case SET_NEWS_POST:\r\n      return {\r\n        ...state,\r\n        post: action.payload,\r\n      };\r\n    case SET_NEWS_POST_COMMENTS:\r\n      return {\r\n        ...state,\r\n        comments: action.payload,\r\n      };\r\n    case LIKE_NEWS:\r\n      return {\r\n        ...state,\r\n        content: action.payload,\r\n      };\r\n    case LIKE_NEWS_POST:\r\n      return {\r\n        ...state,\r\n        post: action.payload,\r\n      };\r\n    case SET_NEWS_COMMENT:\r\n      return {\r\n        ...state,\r\n        comments: {\r\n          ...state.comments,\r\n          content: action.payload\r\n        },\r\n      };\r\n    case CLEAR_NEWS:\r\n      return {\r\n        ...state,\r\n        content: [],\r\n      };\r\n    case CLEAR_NEWS_POST:\r\n      return {\r\n        ...state,\r\n        post: {},\r\n      };\r\n    case ADD_NEWS_POST:\r\n      return {\r\n        ...state,\r\n        content: [\r\n          action.payload,\r\n          ...state.content,\r\n        ],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  SET_EVENTS,\r\n  SET_EVENTS_POST,\r\n  SET_EVENTS_POST_COMMENTS,\r\n  CLEAR_EVENTS_POST,\r\n  SET_EVENT_COMMENT,\r\n  LIKE_EVENT,\r\n  LIKE_EVENTS_POST,\r\n  CLEAR_EVENTS,\r\n  ADD_EVENTS_POST\r\n} from '../constants/actions.constants';\r\n\r\nconst initialState = {\r\n  currentPage: 0,\r\n  totalPages: 0,\r\n  content: [],\r\n  post: {},\r\n  comments: []\r\n};\r\n\r\nexport default function eventsReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_EVENTS:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    case SET_EVENTS_POST:\r\n      return {\r\n        ...state,\r\n        post: action.payload,\r\n      };\r\n    case SET_EVENTS_POST_COMMENTS:\r\n      return {\r\n        ...state,\r\n        comments: action.payload,\r\n      };\r\n    case LIKE_EVENTS_POST:\r\n      return {\r\n        ...state,\r\n        post: action.payload,\r\n      };\r\n    case SET_EVENT_COMMENT:\r\n      return {\r\n        ...state,\r\n        comments: {\r\n          ...state.comments,\r\n          content: action.payload\r\n        },\r\n      };\r\n    case LIKE_EVENT:\r\n      return {\r\n        ...state,\r\n        content: action.payload,\r\n      };\r\n    case CLEAR_EVENTS_POST:\r\n      return {\r\n        ...state,\r\n        post: {},\r\n      };\r\n    case CLEAR_EVENTS:\r\n      return {\r\n        ...state,\r\n        content: [],\r\n      };\r\n    case ADD_EVENTS_POST:\r\n      return {\r\n        ...state,\r\n        content: [\r\n          action.payload,\r\n          ...state.content,\r\n        ],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { CHANGE_MODALS_STATE } from '../constants/actions.constants';\r\n\r\nconst initialState = {\r\n  commentModal: {},\r\n  postModal: {},\r\n  productModal: {},\r\n  changePassModal: {},\r\n}\r\n\r\nexport default function modalsReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case CHANGE_MODALS_STATE:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  SET_CATEGORIES,\r\n  SET_FILTERS,\r\n  SET_PRODUCTS,\r\n  SET_POST,\r\n  ADD_NEW_PRODUCT\r\n} from '../constants/actions.constants';\r\n\r\nconst initialState = {\r\n  currentPage: 0,\r\n  totalPages: 0,\r\n  content: [],\r\n  categories: [],\r\n  filters: [],\r\n  post: {},\r\n};\r\n\r\nexport default function stockReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CATEGORIES:\r\n      return {\r\n        ...state,\r\n        categories: action.payload,\r\n      };\r\n    case SET_FILTERS:\r\n      return {\r\n        ...state,\r\n        filters: action.payload,\r\n      };\r\n    case SET_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    case SET_POST:\r\n      return {\r\n        ...state,\r\n        post: action.payload,\r\n      };\r\n    case ADD_NEW_PRODUCT:\r\n      return {\r\n        ...state,\r\n        content: [\r\n          action.payload,\r\n          ...state.content\r\n        ],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import userReducer from './user-reducer';\r\nimport newsReducer from './news-reducer';\r\nimport eventsReducer from './events-reducer';\r\nimport modalsReducer from './modals-reducer';\r\nimport stockReducer from './stock-reducer';\r\nimport { combineReducers } from 'redux';\r\n\r\nexport const rootReducer = combineReducers({\r\n  user: userReducer,\r\n  news: newsReducer,\r\n  events: eventsReducer,\r\n  modals: modalsReducer,\r\n  stock: stockReducer,\r\n});\r\n","import thunk from 'redux-thunk';\r\nimport {\r\n  applyMiddleware,\r\n  createStore,\r\n} from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { rootReducer } from './reducers';\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(\r\n    applyMiddleware(thunk),\r\n  ),\r\n);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './app';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"profile_container__oNhyE\",\"img\":\"profile_img__2ht-1\",\"name\":\"profile_name__1xYcT\",\"item\":\"profile_item__3qtqA\",\"subtitle\":\"profile_subtitle__2Pivw\",\"description\":\"profile_description__CCEs4\",\"text\":\"profile_text__ayJ9Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"post-modal_textarea__ehIqf\",\"error\":\"post-modal_error__19YAp\",\"btn\":\"post-modal_btn__-kR_l\",\"file\":\"post-modal_file__Lbt76\",\"text\":\"post-modal_text__194nu\",\"date\":\"post-modal_date__1sr2p\",\"dateInput\":\"post-modal_dateInput__2tcJv\",\"row\":\"post-modal_row__2m8Ru\",\"input\":\"post-modal_input__1_CNY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"product-modal_input__1vd0d\",\"file\":\"product-modal_file__2vU_v\",\"text\":\"product-modal_text__2-E9B\",\"check\":\"product-modal_check__aQ3SU\",\"select\":\"product-modal_select__2STHF\",\"btn\":\"product-modal_btn__3oXyT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"input_wrap__17D6H\",\"active\":\"input_active__siX_q\",\"input\":\"input_input__2oRiR\",\"label\":\"input_label__3j6dV\",\"error\":\"input_error__2sn0m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__2_ata\",\"link\":\"header_link__1J-hH\",\"logo\":\"header_logo__2PtGD\",\"me\":\"header_me__3ox1G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"user-preview_container__3MvZw\",\"noAvatar\":\"user-preview_noAvatar__2K3oh\",\"img\":\"user-preview_img__7HuhW\",\"name\":\"user-preview_name__1QiOZ\",\"post\":\"user-preview_post__8bSgK\",\"date\":\"user-preview_date__1F5l3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"textarea_wrap__zMati\",\"active\":\"textarea_active__1XEj2\",\"input\":\"textarea_input__3q7_P\",\"label\":\"textarea_label__5QI4E\",\"error\":\"textarea_error__3-tdT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"item_container__2cbOJ\",\"header\":\"item_header__1lGUw\",\"likes\":\"item_likes__1chHe\",\"likeIcon\":\"item_likeIcon__3p_eR\",\"active\":\"item_active__2VWPs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"static_container__jTjkn\",\"logo\":\"static_logo__kghp7\",\"link\":\"static_link__Kw8qU\",\"row\":\"static_row__1Nm4v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"auth_wrap__2Gu7G\",\"form\":\"auth_form__2yD-z\",\"logo\":\"auth_logo__2uiNY\",\"copyright\":\"auth_copyright__24pI8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"filter_filter__3PBir\",\"checkbox\":\"filter_checkbox__uaPj2\",\"title\":\"filter_title__3mHtH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"logo_container__2ylh5\",\"logo\":\"logo_logo__3whx4\",\"name\":\"logo_name__3zzUV\"};"],"sourceRoot":""}